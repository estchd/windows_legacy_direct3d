// Bindings generated by `windows-bindgen` 0.61.1

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]

pub mod Microsoft {
    pub mod Win32 {
        pub mod Graphics {
            pub mod Direct3D {
                pub mod Legacy {
                    pub const D3DDP_DONOTCLIP: i32 = 4i32;
                    pub const D3DDP_DONOTLIGHT: i32 = 16i32;
                    pub const D3DDP_DONOTUPDATEEXTENTS: i32 = 8i32;
                    pub const D3DDP_OUTOFORDER: i32 = 2i32;
                    pub const D3DDP_WAIT: i32 = 1i32;
                    pub const D3DNEXT_HEAD: i32 = 2i32;
                    pub const D3DNEXT_NEXT: i32 = 1i32;
                    pub const D3DNEXT_TAIL: i32 = 4i32;
                    pub const DIRECT3D_VERSION: u32 = 1792u32;
                    windows_core::imp::define_interface!(
                        IDirect3D,
                        IDirect3D_Vtbl,
                        0x3bba0080_2421_11cf_a31a_00aa00b93356
                    );
                    windows_core::imp::interface_hierarchy!(IDirect3D, windows_core::IUnknown);
                    impl IDirect3D {
                        pub unsafe fn Initialize(
                            &self,
                            param0: *const windows_core::GUID,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Initialize)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EnumDevices(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumDevices)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateLight<P1>(
                            &self,
                            param0: *mut Option<IDirect3DLight>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateLight)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateMaterial<P1>(
                            &self,
                            param0: *mut Option<IDirect3DMaterial>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateViewport<P1>(
                            &self,
                            param0: *mut Option<IDirect3DViewport>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateViewport)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn FindDevice(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).FindDevice)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3D_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub Initialize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *const windows_core::GUID,
                        )
                            -> windows_core::HRESULT,
                        pub EnumDevices: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateLight: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub FindDevice: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3D_Impl: windows_core::IUnknownImpl {
                        fn Initialize(
                            &self,
                            param0: *const windows_core::GUID,
                        ) -> windows_core::Result<()>;
                        fn EnumDevices(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn CreateLight(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DLight>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn CreateMaterial(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DMaterial>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn CreateViewport(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DViewport>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn FindDevice(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3D_Vtbl {
                        pub const fn new<Identity: IDirect3D_Impl, const OFFSET: isize>() -> Self {
                            unsafe extern "system" fn Initialize<
                                Identity: IDirect3D_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *const windows_core::GUID,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D_Impl::Initialize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EnumDevices<
                                Identity: IDirect3D_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMDEVICESCALLBACK,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D_Impl::EnumDevices(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateLight<
                                Identity: IDirect3D_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D_Impl::CreateLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateMaterial<
                                Identity: IDirect3D_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D_Impl::CreateMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateViewport<
                                Identity: IDirect3D_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D_Impl::CreateViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn FindDevice<
                                Identity: IDirect3D_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DFINDDEVICESEARCH,
                                param1 : *mut windows::Win32::Graphics::Direct3D9:: D3DFINDDEVICERESULT,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D_Impl::FindDevice(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Initialize: Initialize::<Identity, OFFSET>,
                                EnumDevices: EnumDevices::<Identity, OFFSET>,
                                CreateLight: CreateLight::<Identity, OFFSET>,
                                CreateMaterial: CreateMaterial::<Identity, OFFSET>,
                                CreateViewport: CreateViewport::<Identity, OFFSET>,
                                FindDevice: FindDevice::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3D as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3D {}
                    windows_core::imp::define_interface!(
                        IDirect3D2,
                        IDirect3D2_Vtbl,
                        0x6aae1ec1_662a_11d0_889d_00aa00bbb76a
                    );
                    windows_core::imp::interface_hierarchy!(IDirect3D2, windows_core::IUnknown);
                    impl IDirect3D2 {
                        pub unsafe fn EnumDevices(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumDevices)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateLight<P1>(
                            &self,
                            param0: *mut Option<IDirect3DLight>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateLight)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateMaterial<P1>(
                            &self,
                            param0: *mut Option<IDirect3DMaterial2>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateViewport<P1>(
                            &self,
                            param0: *mut Option<IDirect3DViewport2>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateViewport)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn FindDevice(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).FindDevice)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateDevice<P1>(
                            &self,
                            param0: *const windows_core::GUID,
                            param1: P1,
                        ) -> windows_core::Result<IDirect3DDevice2>
                        where
                            P1: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                        {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).CreateDevice)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3D2_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub EnumDevices: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateLight: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub FindDevice: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        )
                            -> windows_core::HRESULT,
                        pub CreateDevice: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *const windows_core::GUID,
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3D2_Impl: windows_core::IUnknownImpl {
                        fn EnumDevices(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn CreateLight(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DLight>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn CreateMaterial(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DMaterial2>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn CreateViewport(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DViewport2>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn FindDevice(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        ) -> windows_core::Result<()>;
                        fn CreateDevice(
                            &self,
                            param0: *const windows_core::GUID,
                            param1: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                        ) -> windows_core::Result<IDirect3DDevice2>;
                    }
                    impl IDirect3D2_Vtbl {
                        pub const fn new<Identity: IDirect3D2_Impl, const OFFSET: isize>() -> Self {
                            unsafe extern "system" fn EnumDevices<
                                Identity: IDirect3D2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMDEVICESCALLBACK,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D2_Impl::EnumDevices(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateLight<
                                Identity: IDirect3D2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D2_Impl::CreateLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateMaterial<
                                Identity: IDirect3D2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D2_Impl::CreateMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateViewport<
                                Identity: IDirect3D2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D2_Impl::CreateViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn FindDevice<
                                Identity: IDirect3D2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DFINDDEVICESEARCH,
                                param1 : *mut windows::Win32::Graphics::Direct3D9:: D3DFINDDEVICERESULT,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D2_Impl::FindDevice(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateDevice<
                                Identity: IDirect3D2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *const windows_core::GUID,
                                param1: *mut core::ffi::c_void,
                                param2: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3D2_Impl::CreateDevice(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    ) {
                                        Ok(ok__) => {
                                            param2.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                EnumDevices: EnumDevices::<Identity, OFFSET>,
                                CreateLight: CreateLight::<Identity, OFFSET>,
                                CreateMaterial: CreateMaterial::<Identity, OFFSET>,
                                CreateViewport: CreateViewport::<Identity, OFFSET>,
                                FindDevice: FindDevice::<Identity, OFFSET>,
                                CreateDevice: CreateDevice::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3D2 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3D2 {}
                    windows_core::imp::define_interface!(
                        IDirect3D3,
                        IDirect3D3_Vtbl,
                        0xbb223240_e72b_11d0_a9b4_00aa00c0993e
                    );
                    windows_core::imp::interface_hierarchy!(IDirect3D3, windows_core::IUnknown);
                    impl IDirect3D3 {
                        pub unsafe fn EnumDevices(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumDevices)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateLight<P1>(
                            &self,
                            param0: *mut Option<IDirect3DLight>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateLight)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateMaterial<P1>(
                            &self,
                            param0: *mut Option<IDirect3DMaterial3>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateViewport<P1>(
                            &self,
                            param0: *mut Option<IDirect3DViewport3>,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateViewport)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn FindDevice(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).FindDevice)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateDevice<P1, P3>(
                            &self,
                            param0: *const windows_core::GUID,
                            param1: P1,
                            param2: *mut Option<IDirect3DDevice3>,
                            param3: P3,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                            >,
                            P3: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateDevice)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                    core::mem::transmute(param2),
                                    param3.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateVertexBuffer<P3>(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                            param1: *mut Option<IDirect3DVertexBuffer>,
                            param2: u32,
                            param3: P3,
                        ) -> windows_core::Result<()>
                        where
                            P3: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateVertexBuffer)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    core::mem::transmute(param1),
                                    param2,
                                    param3.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EnumZBufferFormats(
                            &self,
                            param0: *const windows_core::GUID,
                            param1 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                            param2: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumZBufferFormats)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EvictManagedTextures(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EvictManagedTextures)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3D3_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub EnumDevices: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateLight: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub FindDevice: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        )
                            -> windows_core::HRESULT,
                        pub CreateDevice: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *const windows_core::GUID,
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateVertexBuffer: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                            *mut *mut core::ffi::c_void,
                            u32,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub EnumZBufferFormats: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *const windows_core::GUID,
                            windows::Win32::Graphics::Direct3D9::LPD3DENUMPIXELFORMATSCALLBACK,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub EvictManagedTextures:
                            unsafe extern "system" fn(
                                *mut core::ffi::c_void,
                            )
                                -> windows_core::HRESULT,
                    }
                    pub trait IDirect3D3_Impl: windows_core::IUnknownImpl {
                        fn EnumDevices(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn CreateLight(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DLight>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn CreateMaterial(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DMaterial3>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn CreateViewport(
                            &self,
                            param0: windows_core::OutRef<'_, IDirect3DViewport3>,
                            param1: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn FindDevice(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICESEARCH,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DFINDDEVICERESULT,
                        ) -> windows_core::Result<()>;
                        fn CreateDevice(
                            &self,
                            param0: *const windows_core::GUID,
                            param1: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                            >,
                            param2: windows_core::OutRef<'_, IDirect3DDevice3>,
                            param3: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn CreateVertexBuffer(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                            param1: windows_core::OutRef<'_, IDirect3DVertexBuffer>,
                            param2: u32,
                            param3: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn EnumZBufferFormats(
                            &self,
                            param0: *const windows_core::GUID,
                            param1 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                            param2: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn EvictManagedTextures(&self) -> windows_core::Result<()>;
                    }
                    impl IDirect3D3_Vtbl {
                        pub const fn new<Identity: IDirect3D3_Impl, const OFFSET: isize>() -> Self {
                            unsafe extern "system" fn EnumDevices<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMDEVICESCALLBACK,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::EnumDevices(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateLight<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::CreateLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateMaterial<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::CreateMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateViewport<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::CreateViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn FindDevice<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DFINDDEVICESEARCH,
                                param1 : *mut windows::Win32::Graphics::Direct3D9:: D3DFINDDEVICERESULT,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::FindDevice(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateDevice<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *const windows_core::GUID,
                                param1: *mut core::ffi::c_void,
                                param2: *mut *mut core::ffi::c_void,
                                param3: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::CreateDevice(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateVertexBuffer<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DVERTEXBUFFERDESC,
                                param1: *mut *mut core::ffi::c_void,
                                param2: u32,
                                param3: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::CreateVertexBuffer(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EnumZBufferFormats<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *const windows_core::GUID,
                                param1 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                                param2: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::EnumZBufferFormats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EvictManagedTextures<
                                Identity: IDirect3D3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D3_Impl::EvictManagedTextures(this).into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                EnumDevices: EnumDevices::<Identity, OFFSET>,
                                CreateLight: CreateLight::<Identity, OFFSET>,
                                CreateMaterial: CreateMaterial::<Identity, OFFSET>,
                                CreateViewport: CreateViewport::<Identity, OFFSET>,
                                FindDevice: FindDevice::<Identity, OFFSET>,
                                CreateDevice: CreateDevice::<Identity, OFFSET>,
                                CreateVertexBuffer: CreateVertexBuffer::<Identity, OFFSET>,
                                EnumZBufferFormats: EnumZBufferFormats::<Identity, OFFSET>,
                                EvictManagedTextures: EvictManagedTextures::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3D3 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3D3 {}
                    windows_core::imp::define_interface!(
                        IDirect3D7,
                        IDirect3D7_Vtbl,
                        0xf5049e77_4861_11d2_a407_00a0c90629a8
                    );
                    windows_core::imp::interface_hierarchy!(IDirect3D7, windows_core::IUnknown);
                    impl IDirect3D7 {
                        pub unsafe fn EnumDevices(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK7,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumDevices)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateDevice<P1>(
                            &self,
                            param0: *const windows_core::GUID,
                            param1: P1,
                        ) -> windows_core::Result<IDirect3DDevice7>
                        where
                            P1: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                        {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).CreateDevice)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn CreateVertexBuffer(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                            param1: *mut Option<IDirect3DVertexBuffer7>,
                            param2: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateVertexBuffer)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    core::mem::transmute(param1),
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EnumZBufferFormats(
                            &self,
                            param0: *const windows_core::GUID,
                            param1 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                            param2: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumZBufferFormats)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EvictManagedTextures(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EvictManagedTextures)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3D7_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub EnumDevices: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK7,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateDevice: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *const windows_core::GUID,
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateVertexBuffer: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                            *mut *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub EnumZBufferFormats: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *const windows_core::GUID,
                            windows::Win32::Graphics::Direct3D9::LPD3DENUMPIXELFORMATSCALLBACK,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub EvictManagedTextures:
                            unsafe extern "system" fn(
                                *mut core::ffi::c_void,
                            )
                                -> windows_core::HRESULT,
                    }
                    pub trait IDirect3D7_Impl: windows_core::IUnknownImpl {
                        fn EnumDevices(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::LPD3DENUMDEVICESCALLBACK7,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn CreateDevice(
                            &self,
                            param0: *const windows_core::GUID,
                            param1: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                        ) -> windows_core::Result<IDirect3DDevice7>;
                        fn CreateVertexBuffer(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                            param1: windows_core::OutRef<'_, IDirect3DVertexBuffer7>,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn EnumZBufferFormats(
                            &self,
                            param0: *const windows_core::GUID,
                            param1 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                            param2: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn EvictManagedTextures(&self) -> windows_core::Result<()>;
                    }
                    impl IDirect3D7_Vtbl {
                        pub const fn new<Identity: IDirect3D7_Impl, const OFFSET: isize>() -> Self {
                            unsafe extern "system" fn EnumDevices<
                                Identity: IDirect3D7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMDEVICESCALLBACK7,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D7_Impl::EnumDevices(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateDevice<
                                Identity: IDirect3D7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *const windows_core::GUID,
                                param1: *mut core::ffi::c_void,
                                param2: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3D7_Impl::CreateDevice(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    ) {
                                        Ok(ok__) => {
                                            param2.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn CreateVertexBuffer<
                                Identity: IDirect3D7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DVERTEXBUFFERDESC,
                                param1: *mut *mut core::ffi::c_void,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D7_Impl::CreateVertexBuffer(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EnumZBufferFormats<
                                Identity: IDirect3D7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *const windows_core::GUID,
                                param1 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                                param2: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D7_Impl::EnumZBufferFormats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EvictManagedTextures<
                                Identity: IDirect3D7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3D7_Impl::EvictManagedTextures(this).into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                EnumDevices: EnumDevices::<Identity, OFFSET>,
                                CreateDevice: CreateDevice::<Identity, OFFSET>,
                                CreateVertexBuffer: CreateVertexBuffer::<Identity, OFFSET>,
                                EnumZBufferFormats: EnumZBufferFormats::<Identity, OFFSET>,
                                EvictManagedTextures: EvictManagedTextures::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3D7 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3D7 {}
                    windows_core::imp::define_interface!(
                        IDirect3DDevice,
                        IDirect3DDevice_Vtbl,
                        0x64108800_957d_11d0_89ab_00a0c9054129
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DDevice,
                        windows_core::IUnknown
                    );
                    impl IDirect3DDevice {
                        pub unsafe fn Initialize<P0>(
                            &self,
                            param0: P0,
                            param1: *mut windows_core::GUID,
                            param2: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3D>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Initialize)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1 as _,
                                    param2 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetCaps(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetCaps)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SwapTextureHandles<P0, P1>(
                            &self,
                            param0: P0,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DTexture>,
                            P1: windows_core::Param<IDirect3DTexture>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SwapTextureHandles)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateExecuteBuffer<P2>(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                            param1: *mut Option<IDirect3DExecuteBuffer>,
                            param2: P2,
                        ) -> windows_core::Result<()>
                        where
                            P2: windows_core::Param<windows_core::IUnknown>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateExecuteBuffer)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    core::mem::transmute(param1),
                                    param2.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetStats(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetStats)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Execute<P0, P1>(
                            &self,
                            param0: P0,
                            param1: P1,
                            param2: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DExecuteBuffer>,
                            P1: windows_core::Param<IDirect3DViewport>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Execute)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1.param().abi(),
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn AddViewport<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).AddViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DeleteViewport<P0>(
                            &self,
                            param0: P0,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).DeleteViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn NextViewport<P0>(
                            &self,
                            param0: P0,
                            param1: *mut Option<IDirect3DViewport>,
                            param2: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).NextViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    core::mem::transmute(param1),
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Pick<P0, P1>(
                            &self,
                            param0: P0,
                            param1: P1,
                            param2: u32,
                            param3: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DExecuteBuffer>,
                            P1: windows_core::Param<IDirect3DViewport>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Pick)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1.param().abi(),
                                    param2,
                                    param3 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetPickRecords(
                            &self,
                            param0: *mut u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DPICKRECORD,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetPickRecords)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EnumTextureFormats(
                            &self,
                            param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMTEXTUREFORMATSCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumTextureFormats)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateMatrix(
                            &self,
                            param0: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateMatrix)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetMatrix(
                            &self,
                            param0: u32,
                            param1: *const windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetMatrix)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetMatrix(
                            &self,
                            param0: u32,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetMatrix)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DeleteMatrix(&self, param0: u32) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DeleteMatrix)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn BeginScene(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).BeginScene)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EndScene(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EndScene)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetDirect3D(&self) -> windows_core::Result<IDirect3D> {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetDirect3D)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DDevice_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub Initialize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut windows_core::GUID,
                            *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        )
                            -> windows_core::HRESULT,
                        pub GetCaps: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        )
                            -> windows_core::HRESULT,
                        pub SwapTextureHandles: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateExecuteBuffer: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                            *mut *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetStats: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                        )
                            -> windows_core::HRESULT,
                        pub Execute: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub AddViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub DeleteViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub NextViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub Pick: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            u32,
                            *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                        )
                            -> windows_core::HRESULT,
                        pub GetPickRecords: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut u32,
                            *mut windows::Win32::Graphics::Direct3D9::D3DPICKRECORD,
                        )
                            -> windows_core::HRESULT,
                        pub EnumTextureFormats: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::LPD3DENUMTEXTUREFORMATSCALLBACK,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub CreateMatrix: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                        pub SetMatrix: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            *const windows_numerics::Matrix4x4,
                        )
                            -> windows_core::HRESULT,
                        pub GetMatrix: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            *mut windows_numerics::Matrix4x4,
                        )
                            -> windows_core::HRESULT,
                        pub DeleteMatrix: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub BeginScene: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub EndScene: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetDirect3D: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DDevice_Impl: windows_core::IUnknownImpl {
                        fn Initialize(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3D>,
                            param1: *mut windows_core::GUID,
                            param2: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        ) -> windows_core::Result<()>;
                        fn GetCaps(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        ) -> windows_core::Result<()>;
                        fn SwapTextureHandles(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DTexture>,
                            param1: windows_core::Ref<'_, IDirect3DTexture>,
                        ) -> windows_core::Result<()>;
                        fn CreateExecuteBuffer(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                            param1: windows_core::OutRef<'_, IDirect3DExecuteBuffer>,
                            param2: windows_core::Ref<'_, windows_core::IUnknown>,
                        ) -> windows_core::Result<()>;
                        fn GetStats(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                        ) -> windows_core::Result<()>;
                        fn Execute(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DExecuteBuffer>,
                            param1: windows_core::Ref<'_, IDirect3DViewport>,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn AddViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport>,
                        ) -> windows_core::Result<()>;
                        fn DeleteViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport>,
                        ) -> windows_core::Result<()>;
                        fn NextViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport>,
                            param1: windows_core::OutRef<'_, IDirect3DViewport>,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn Pick(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DExecuteBuffer>,
                            param1: windows_core::Ref<'_, IDirect3DViewport>,
                            param2: u32,
                            param3: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                        ) -> windows_core::Result<()>;
                        fn GetPickRecords(
                            &self,
                            param0: *mut u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DPICKRECORD,
                        ) -> windows_core::Result<()>;
                        fn EnumTextureFormats(
                            &self,
                            param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMTEXTUREFORMATSCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn CreateMatrix(&self, param0: *mut u32) -> windows_core::Result<()>;
                        fn SetMatrix(
                            &self,
                            param0: u32,
                            param1: *const windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn GetMatrix(
                            &self,
                            param0: u32,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn DeleteMatrix(&self, param0: u32) -> windows_core::Result<()>;
                        fn BeginScene(&self) -> windows_core::Result<()>;
                        fn EndScene(&self) -> windows_core::Result<()>;
                        fn GetDirect3D(&self) -> windows_core::Result<IDirect3D>;
                    }
                    impl IDirect3DDevice_Vtbl {
                        pub const fn new<Identity: IDirect3DDevice_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn Initialize<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut windows_core::GUID,
                                param2: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::Initialize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetCaps<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::GetCaps(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SwapTextureHandles<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::SwapTextureHandles(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateExecuteBuffer<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DEXECUTEBUFFERDESC,
                                param1: *mut *mut core::ffi::c_void,
                                param2: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::CreateExecuteBuffer(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetStats<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::GetStats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Execute<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::Execute(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn AddViewport<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::AddViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DeleteViewport<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::DeleteViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn NextViewport<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut *mut core::ffi::c_void,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::NextViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Pick<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                                param2: u32,
                                param3: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::Pick(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetPickRecords<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut u32,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DPICKRECORD,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::GetPickRecords(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EnumTextureFormats<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMTEXTUREFORMATSCALLBACK,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::EnumTextureFormats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateMatrix<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::CreateMatrix(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetMatrix<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *const windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::SetMatrix(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetMatrix<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::GetMatrix(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DeleteMatrix<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::DeleteMatrix(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn BeginScene<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::BeginScene(this).into()
                                }
                            }
                            unsafe extern "system" fn EndScene<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice_Impl::EndScene(this).into()
                                }
                            }
                            unsafe extern "system" fn GetDirect3D<
                                Identity: IDirect3DDevice_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice_Impl::GetDirect3D(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Initialize: Initialize::<Identity, OFFSET>,
                                GetCaps: GetCaps::<Identity, OFFSET>,
                                SwapTextureHandles: SwapTextureHandles::<Identity, OFFSET>,
                                CreateExecuteBuffer: CreateExecuteBuffer::<Identity, OFFSET>,
                                GetStats: GetStats::<Identity, OFFSET>,
                                Execute: Execute::<Identity, OFFSET>,
                                AddViewport: AddViewport::<Identity, OFFSET>,
                                DeleteViewport: DeleteViewport::<Identity, OFFSET>,
                                NextViewport: NextViewport::<Identity, OFFSET>,
                                Pick: Pick::<Identity, OFFSET>,
                                GetPickRecords: GetPickRecords::<Identity, OFFSET>,
                                EnumTextureFormats: EnumTextureFormats::<Identity, OFFSET>,
                                CreateMatrix: CreateMatrix::<Identity, OFFSET>,
                                SetMatrix: SetMatrix::<Identity, OFFSET>,
                                GetMatrix: GetMatrix::<Identity, OFFSET>,
                                DeleteMatrix: DeleteMatrix::<Identity, OFFSET>,
                                BeginScene: BeginScene::<Identity, OFFSET>,
                                EndScene: EndScene::<Identity, OFFSET>,
                                GetDirect3D: GetDirect3D::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DDevice as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DDevice {}
                    windows_core::imp::define_interface!(
                        IDirect3DDevice2,
                        IDirect3DDevice2_Vtbl,
                        0x93281501_8cf8_11d0_89ab_00a0c9054129
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DDevice2,
                        windows_core::IUnknown
                    );
                    impl IDirect3DDevice2 {
                        pub unsafe fn GetCaps(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetCaps)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SwapTextureHandles<P0, P1>(
                            &self,
                            param0: P0,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DTexture2>,
                            P1: windows_core::Param<IDirect3DTexture2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SwapTextureHandles)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetStats(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetStats)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn AddViewport<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).AddViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DeleteViewport<P0>(
                            &self,
                            param0: P0,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).DeleteViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn NextViewport<P0>(
                            &self,
                            param0: P0,
                            param1: *mut Option<IDirect3DViewport2>,
                            param2: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).NextViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    core::mem::transmute(param1),
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EnumTextureFormats(
                            &self,
                            param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMTEXTUREFORMATSCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumTextureFormats)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn BeginScene(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).BeginScene)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EndScene(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EndScene)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetDirect3D(&self) -> windows_core::Result<IDirect3D2> {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetDirect3D)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn SetCurrentViewport<P0>(
                            &self,
                            param0: P0,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetCurrentViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetCurrentViewport(
                            &self,
                        ) -> windows_core::Result<IDirect3DViewport2> {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetCurrentViewport)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn SetRenderTarget<P0>(
                            &self,
                            param0: P0,
                            param1: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetRenderTarget)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetRenderTarget(
                            &self,
                        ) -> windows_core::Result<
                            windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                        > {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetRenderTarget)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn Begin(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            param2: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Begin)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn BeginIndexed(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).BeginIndexed)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Vertex(
                            &self,
                            param0: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Vertex)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Index(&self, param0: u16) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Index)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn End(&self, param0: u32) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).End)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetRenderState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetRenderState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetLightState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetLightState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetLightState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetLightState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn MultiplyTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).MultiplyTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawPrimitive)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawIndexedPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawIndexedPrimitive)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4 as _,
                                    param5,
                                    param6,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetClipStatus)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetClipStatus)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DDevice2_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub GetCaps: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        )
                            -> windows_core::HRESULT,
                        pub SwapTextureHandles: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetStats: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                        )
                            -> windows_core::HRESULT,
                        pub AddViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub DeleteViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub NextViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub EnumTextureFormats: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::LPD3DENUMTEXTUREFORMATSCALLBACK,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub BeginScene: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub EndScene: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetDirect3D: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub SetCurrentViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetCurrentViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub SetRenderTarget: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub GetRenderTarget: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub Begin: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub BeginIndexed: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            *mut core::ffi::c_void,
                            u32,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub Vertex: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub Index: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u16,
                        )
                            -> windows_core::HRESULT,
                        pub End: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub GetRenderState: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                        pub SetRenderState: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub GetLightState: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                        pub SetLightState: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub SetTransform: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            *mut windows_numerics::Matrix4x4,
                        )
                            -> windows_core::HRESULT,
                        pub GetTransform: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            *mut windows_numerics::Matrix4x4,
                        )
                            -> windows_core::HRESULT,
                        pub MultiplyTransform: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            *mut windows_numerics::Matrix4x4,
                        )
                            -> windows_core::HRESULT,
                        pub DrawPrimitive: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            *mut core::ffi::c_void,
                            u32,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub DrawIndexedPrimitive:
                            unsafe extern "system" fn(
                                *mut core::ffi::c_void,
                                windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                                *mut core::ffi::c_void,
                                u32,
                                *mut u16,
                                u32,
                                u32,
                            )
                                -> windows_core::HRESULT,
                        pub SetClipStatus: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        )
                            -> windows_core::HRESULT,
                        pub GetClipStatus: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DDevice2_Impl: windows_core::IUnknownImpl {
                        fn GetCaps(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        ) -> windows_core::Result<()>;
                        fn SwapTextureHandles(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DTexture2>,
                            param1: windows_core::Ref<'_, IDirect3DTexture2>,
                        ) -> windows_core::Result<()>;
                        fn GetStats(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                        ) -> windows_core::Result<()>;
                        fn AddViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport2>,
                        ) -> windows_core::Result<()>;
                        fn DeleteViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport2>,
                        ) -> windows_core::Result<()>;
                        fn NextViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport2>,
                            param1: windows_core::OutRef<'_, IDirect3DViewport2>,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn EnumTextureFormats(
                            &self,
                            param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMTEXTUREFORMATSCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn BeginScene(&self) -> windows_core::Result<()>;
                        fn EndScene(&self) -> windows_core::Result<()>;
                        fn GetDirect3D(&self) -> windows_core::Result<IDirect3D2>;
                        fn SetCurrentViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport2>,
                        ) -> windows_core::Result<()>;
                        fn GetCurrentViewport(&self) -> windows_core::Result<IDirect3DViewport2>;
                        fn SetRenderTarget(
                            &self,
                            param0: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn GetRenderTarget(
                            &self,
                        ) -> windows_core::Result<
                            windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                        >;
                        fn Begin(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn BeginIndexed(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn Vertex(
                            &self,
                            param0: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn Index(&self, param0: u16) -> windows_core::Result<()>;
                        fn End(&self, param0: u32) -> windows_core::Result<()>;
                        fn GetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn SetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn GetLightState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn SetLightState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn SetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn GetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn MultiplyTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn DrawPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawIndexedPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                        fn SetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()>;
                        fn GetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DDevice2_Vtbl {
                        pub const fn new<Identity: IDirect3DDevice2_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn GetCaps<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::GetCaps(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SwapTextureHandles<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::SwapTextureHandles(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetStats<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::GetStats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn AddViewport<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::AddViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DeleteViewport<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::DeleteViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn NextViewport<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut *mut core::ffi::c_void,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::NextViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EnumTextureFormats<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMTEXTUREFORMATSCALLBACK,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::EnumTextureFormats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn BeginScene<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::BeginScene(this).into()
                                }
                            }
                            unsafe extern "system" fn EndScene<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::EndScene(this).into()
                                }
                            }
                            unsafe extern "system" fn GetDirect3D<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice2_Impl::GetDirect3D(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn SetCurrentViewport<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::SetCurrentViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetCurrentViewport<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice2_Impl::GetCurrentViewport(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn SetRenderTarget<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::SetRenderTarget(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetRenderTarget<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice2_Impl::GetRenderTarget(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn Begin<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::Begin(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn BeginIndexed<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::BeginIndexed(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Vertex<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::Vertex(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Index<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u16,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::Index(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn End<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::End(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetRenderState<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::GetRenderState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetRenderState<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::SetRenderState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetLightState<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::GetLightState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetLightState<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::SetLightState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetTransform<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::SetTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetTransform<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::GetTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn MultiplyTransform<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::MultiplyTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawPrimitive<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::DrawPrimitive(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawIndexedPrimitive<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: windows::Win32::Graphics::Direct3D9::D3DVERTEXTYPE,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                                param4: *mut u16,
                                param5: u32,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::DrawIndexedPrimitive(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetClipStatus<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::SetClipStatus(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetClipStatus<
                                Identity: IDirect3DDevice2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice2_Impl::GetClipStatus(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                GetCaps: GetCaps::<Identity, OFFSET>,
                                SwapTextureHandles: SwapTextureHandles::<Identity, OFFSET>,
                                GetStats: GetStats::<Identity, OFFSET>,
                                AddViewport: AddViewport::<Identity, OFFSET>,
                                DeleteViewport: DeleteViewport::<Identity, OFFSET>,
                                NextViewport: NextViewport::<Identity, OFFSET>,
                                EnumTextureFormats: EnumTextureFormats::<Identity, OFFSET>,
                                BeginScene: BeginScene::<Identity, OFFSET>,
                                EndScene: EndScene::<Identity, OFFSET>,
                                GetDirect3D: GetDirect3D::<Identity, OFFSET>,
                                SetCurrentViewport: SetCurrentViewport::<Identity, OFFSET>,
                                GetCurrentViewport: GetCurrentViewport::<Identity, OFFSET>,
                                SetRenderTarget: SetRenderTarget::<Identity, OFFSET>,
                                GetRenderTarget: GetRenderTarget::<Identity, OFFSET>,
                                Begin: Begin::<Identity, OFFSET>,
                                BeginIndexed: BeginIndexed::<Identity, OFFSET>,
                                Vertex: Vertex::<Identity, OFFSET>,
                                Index: Index::<Identity, OFFSET>,
                                End: End::<Identity, OFFSET>,
                                GetRenderState: GetRenderState::<Identity, OFFSET>,
                                SetRenderState: SetRenderState::<Identity, OFFSET>,
                                GetLightState: GetLightState::<Identity, OFFSET>,
                                SetLightState: SetLightState::<Identity, OFFSET>,
                                SetTransform: SetTransform::<Identity, OFFSET>,
                                GetTransform: GetTransform::<Identity, OFFSET>,
                                MultiplyTransform: MultiplyTransform::<Identity, OFFSET>,
                                DrawPrimitive: DrawPrimitive::<Identity, OFFSET>,
                                DrawIndexedPrimitive: DrawIndexedPrimitive::<Identity, OFFSET>,
                                SetClipStatus: SetClipStatus::<Identity, OFFSET>,
                                GetClipStatus: GetClipStatus::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DDevice2 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DDevice2 {}
                    windows_core::imp::define_interface!(
                        IDirect3DDevice3,
                        IDirect3DDevice3_Vtbl,
                        0xb0ab3b60_33d7_11d1_a981_00c04fd7b174
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DDevice3,
                        windows_core::IUnknown
                    );
                    impl IDirect3DDevice3 {
                        pub unsafe fn GetCaps(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetCaps)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetStats(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetStats)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn AddViewport<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport3>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).AddViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DeleteViewport<P0>(
                            &self,
                            param0: P0,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport3>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).DeleteViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn NextViewport<P0>(
                            &self,
                            param0: P0,
                            param1: *mut Option<IDirect3DViewport3>,
                            param2: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport3>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).NextViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    core::mem::transmute(param1),
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EnumTextureFormats(
                            &self,
                            param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumTextureFormats)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn BeginScene(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).BeginScene)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EndScene(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EndScene)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetDirect3D(&self) -> windows_core::Result<IDirect3D3> {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetDirect3D)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn SetCurrentViewport<P0>(
                            &self,
                            param0: P0,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DViewport3>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetCurrentViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetCurrentViewport(
                            &self,
                        ) -> windows_core::Result<IDirect3DViewport3> {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetCurrentViewport)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn SetRenderTarget<P0>(
                            &self,
                            param0: P0,
                            param1: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetRenderTarget)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetRenderTarget(
                            &self,
                        ) -> windows_core::Result<
                            windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                        > {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetRenderTarget)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn Begin(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Begin)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn BeginIndexed(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).BeginIndexed)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Vertex(
                            &self,
                            param0: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Vertex)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Index(&self, param0: u16) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Index)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn End(&self, param0: u32) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).End)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetRenderState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetRenderState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetLightState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetLightState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetLightState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetLightState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn MultiplyTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).MultiplyTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawPrimitive)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawIndexedPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawIndexedPrimitive)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4 as _,
                                    param5,
                                    param6,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetClipStatus)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetClipStatus)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawPrimitiveStrided(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawPrimitiveStrided)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawIndexedPrimitiveStrided(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawIndexedPrimitiveStrided)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4 as _,
                                    param5,
                                    param6,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawPrimitiveVB<P1>(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: P1,
                            param2: u32,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<IDirect3DVertexBuffer>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawPrimitiveVB)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                    param2,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawIndexedPrimitiveVB<P1>(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: P1,
                            param2: *mut u16,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<IDirect3DVertexBuffer>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawIndexedPrimitiveVB)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                    param2 as _,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn ComputeSphereVisibility(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D::D3DVECTOR,
                            param1: *mut f32,
                            param2: u32,
                            param3: u32,
                            param4: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).ComputeSphereVisibility)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                    param2,
                                    param3,
                                    param4 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetTexture(
                            &self,
                            param0: u32,
                        ) -> windows_core::Result<IDirect3DTexture2> {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetTexture)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn SetTexture<P1>(
                            &self,
                            param0: u32,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<IDirect3DTexture2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetTexture)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetTextureStageState(
                            &self,
                            param0: u32,
                            param1: windows::Win32::Graphics::Direct3D9::D3DTEXTURESTAGESTATETYPE,
                            param2: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetTextureStageState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetTextureStageState(
                            &self,
                            param0: u32,
                            param1: windows::Win32::Graphics::Direct3D9::D3DTEXTURESTAGESTATETYPE,
                            param2: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetTextureStageState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn ValidateDevice(
                            &self,
                            param0: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).ValidateDevice)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DDevice3_Vtbl { pub base__ : windows_core::IUnknown_Vtbl , pub GetCaps :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DDEVICEDESC , *mut windows::Win32::Graphics::Direct3D9:: D3DDEVICEDESC ) -> windows_core::HRESULT , pub GetStats :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DSTATS ) -> windows_core::HRESULT , pub AddViewport :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void ) -> windows_core::HRESULT , pub DeleteViewport :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void ) -> windows_core::HRESULT , pub NextViewport :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void , *mut * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub EnumTextureFormats :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK , *mut core::ffi::c_void ) -> windows_core::HRESULT , pub BeginScene :unsafe extern "system" fn ( * mut core::ffi::c_void , ) -> windows_core::HRESULT , pub EndScene :unsafe extern "system" fn ( * mut core::ffi::c_void , ) -> windows_core::HRESULT , pub GetDirect3D :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut * mut core::ffi::c_void ) -> windows_core::HRESULT , pub SetCurrentViewport :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void ) -> windows_core::HRESULT , pub GetCurrentViewport :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut * mut core::ffi::c_void ) -> windows_core::HRESULT , pub SetRenderTarget :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub GetRenderTarget :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut * mut core::ffi::c_void ) -> windows_core::HRESULT , pub Begin :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , u32 ) -> windows_core::HRESULT , pub BeginIndexed :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut core::ffi::c_void , u32 , u32 ) -> windows_core::HRESULT , pub Vertex :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut core::ffi::c_void ) -> windows_core::HRESULT , pub Index :unsafe extern "system" fn ( * mut core::ffi::c_void , u16 ) -> windows_core::HRESULT , pub End :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub GetRenderState :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DRENDERSTATETYPE , *mut u32 ) -> windows_core::HRESULT , pub SetRenderState :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DRENDERSTATETYPE , u32 ) -> windows_core::HRESULT , pub GetLightState :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DLIGHTSTATETYPE , *mut u32 ) -> windows_core::HRESULT , pub SetLightState :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DLIGHTSTATETYPE , u32 ) -> windows_core::HRESULT , pub SetTransform :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DTRANSFORMSTATETYPE , *mut windows_numerics:: Matrix4x4 ) -> windows_core::HRESULT , pub GetTransform :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DTRANSFORMSTATETYPE , *mut windows_numerics:: Matrix4x4 ) -> windows_core::HRESULT , pub MultiplyTransform :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DTRANSFORMSTATETYPE , *mut windows_numerics:: Matrix4x4 ) -> windows_core::HRESULT , pub DrawPrimitive :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut core::ffi::c_void , u32 , u32 ) -> windows_core::HRESULT , pub DrawIndexedPrimitive :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut core::ffi::c_void , u32 , *mut u16 , u32 , u32 ) -> windows_core::HRESULT , pub SetClipStatus :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DCLIPSTATUS ) -> windows_core::HRESULT , pub GetClipStatus :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DCLIPSTATUS ) -> windows_core::HRESULT , pub DrawPrimitiveStrided :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA , u32 , u32 ) -> windows_core::HRESULT , pub DrawIndexedPrimitiveStrided :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA , u32 , *mut u16 , u32 , u32 ) -> windows_core::HRESULT , pub DrawPrimitiveVB :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , * mut core::ffi::c_void , u32 , u32 , u32 ) -> windows_core::HRESULT , pub DrawIndexedPrimitiveVB :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , * mut core::ffi::c_void , *mut u16 , u32 , u32 ) -> windows_core::HRESULT , pub ComputeSphereVisibility :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D:: D3DVECTOR , *mut f32 , u32 , u32 , *mut u32 ) -> windows_core::HRESULT , pub GetTexture :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut * mut core::ffi::c_void ) -> windows_core::HRESULT , pub SetTexture :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , * mut core::ffi::c_void ) -> windows_core::HRESULT , pub GetTextureStageState :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , windows::Win32::Graphics::Direct3D9:: D3DTEXTURESTAGESTATETYPE , *mut u32 ) -> windows_core::HRESULT , pub SetTextureStageState :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , windows::Win32::Graphics::Direct3D9:: D3DTEXTURESTAGESTATETYPE , u32 ) -> windows_core::HRESULT , pub ValidateDevice :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut u32 ) -> windows_core::HRESULT , }
                    pub trait IDirect3DDevice3_Impl: windows_core::IUnknownImpl {
                        fn GetCaps(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                        ) -> windows_core::Result<()>;
                        fn GetStats(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                        ) -> windows_core::Result<()>;
                        fn AddViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport3>,
                        ) -> windows_core::Result<()>;
                        fn DeleteViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport3>,
                        ) -> windows_core::Result<()>;
                        fn NextViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport3>,
                            param1: windows_core::OutRef<'_, IDirect3DViewport3>,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn EnumTextureFormats(
                            &self,
                            param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn BeginScene(&self) -> windows_core::Result<()>;
                        fn EndScene(&self) -> windows_core::Result<()>;
                        fn GetDirect3D(&self) -> windows_core::Result<IDirect3D3>;
                        fn SetCurrentViewport(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DViewport3>,
                        ) -> windows_core::Result<()>;
                        fn GetCurrentViewport(&self) -> windows_core::Result<IDirect3DViewport3>;
                        fn SetRenderTarget(
                            &self,
                            param0: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                            >,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn GetRenderTarget(
                            &self,
                        ) -> windows_core::Result<
                            windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                        >;
                        fn Begin(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn BeginIndexed(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn Vertex(
                            &self,
                            param0: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn Index(&self, param0: u16) -> windows_core::Result<()>;
                        fn End(&self, param0: u32) -> windows_core::Result<()>;
                        fn GetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn SetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn GetLightState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn SetLightState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn SetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn GetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn MultiplyTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn DrawPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawIndexedPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                        fn SetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()>;
                        fn GetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()>;
                        fn DrawPrimitiveStrided(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawIndexedPrimitiveStrided(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawPrimitiveVB(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows_core::Ref<'_, IDirect3DVertexBuffer>,
                            param2: u32,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawIndexedPrimitiveVB(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows_core::Ref<'_, IDirect3DVertexBuffer>,
                            param2: *mut u16,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn ComputeSphereVisibility(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D::D3DVECTOR,
                            param1: *mut f32,
                            param2: u32,
                            param3: u32,
                            param4: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn GetTexture(
                            &self,
                            param0: u32,
                        ) -> windows_core::Result<IDirect3DTexture2>;
                        fn SetTexture(
                            &self,
                            param0: u32,
                            param1: windows_core::Ref<'_, IDirect3DTexture2>,
                        ) -> windows_core::Result<()>;
                        fn GetTextureStageState(
                            &self,
                            param0: u32,
                            param1: windows::Win32::Graphics::Direct3D9::D3DTEXTURESTAGESTATETYPE,
                            param2: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn SetTextureStageState(
                            &self,
                            param0: u32,
                            param1: windows::Win32::Graphics::Direct3D9::D3DTEXTURESTAGESTATETYPE,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn ValidateDevice(&self, param0: *mut u32) -> windows_core::Result<()>;
                    }
                    impl IDirect3DDevice3_Vtbl {
                        pub const fn new<Identity: IDirect3DDevice3_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn GetCaps<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::GetCaps(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetStats<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DSTATS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::GetStats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn AddViewport<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::AddViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DeleteViewport<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::DeleteViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn NextViewport<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut *mut core::ffi::c_void,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::NextViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EnumTextureFormats<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::EnumTextureFormats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn BeginScene<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::BeginScene(this).into()
                                }
                            }
                            unsafe extern "system" fn EndScene<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::EndScene(this).into()
                                }
                            }
                            unsafe extern "system" fn GetDirect3D<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice3_Impl::GetDirect3D(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn SetCurrentViewport<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::SetCurrentViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetCurrentViewport<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice3_Impl::GetCurrentViewport(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn SetRenderTarget<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::SetRenderTarget(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetRenderTarget<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice3_Impl::GetRenderTarget(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn Begin<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::Begin(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn BeginIndexed<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::BeginIndexed(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Vertex<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::Vertex(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Index<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u16,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::Index(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn End<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::End(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetRenderState<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::GetRenderState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetRenderState<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::SetRenderState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetLightState<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::GetLightState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetLightState<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DLIGHTSTATETYPE,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::SetLightState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetTransform<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::SetTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetTransform<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::GetTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn MultiplyTransform<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::MultiplyTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawPrimitive<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::DrawPrimitive(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawIndexedPrimitive<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                                param4: *mut u16,
                                param5: u32,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::DrawIndexedPrimitive(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetClipStatus<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::SetClipStatus(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetClipStatus<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::GetClipStatus(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawPrimitiveStrided<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::DrawPrimitiveStrided(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawIndexedPrimitiveStrided<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                                param3: u32,
                                param4: *mut u16,
                                param5: u32,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::DrawIndexedPrimitiveStrided(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawPrimitiveVB<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: *mut core::ffi::c_void,
                                param2: u32,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::DrawPrimitiveVB(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawIndexedPrimitiveVB<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: *mut core::ffi::c_void,
                                param2: *mut u16,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::DrawIndexedPrimitiveVB(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn ComputeSphereVisibility<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D::D3DVECTOR,
                                param1: *mut f32,
                                param2: u32,
                                param3: u32,
                                param4: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::ComputeSphereVisibility(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetTexture<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice3_Impl::GetTexture(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    ) {
                                        Ok(ok__) => {
                                            param1.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn SetTexture<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::SetTexture(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetTextureStageState<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1 : windows::Win32::Graphics::Direct3D9:: D3DTEXTURESTAGESTATETYPE,
                                param2: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::GetTextureStageState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetTextureStageState<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1 : windows::Win32::Graphics::Direct3D9:: D3DTEXTURESTAGESTATETYPE,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::SetTextureStageState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn ValidateDevice<
                                Identity: IDirect3DDevice3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice3_Impl::ValidateDevice(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                GetCaps: GetCaps::<Identity, OFFSET>,
                                GetStats: GetStats::<Identity, OFFSET>,
                                AddViewport: AddViewport::<Identity, OFFSET>,
                                DeleteViewport: DeleteViewport::<Identity, OFFSET>,
                                NextViewport: NextViewport::<Identity, OFFSET>,
                                EnumTextureFormats: EnumTextureFormats::<Identity, OFFSET>,
                                BeginScene: BeginScene::<Identity, OFFSET>,
                                EndScene: EndScene::<Identity, OFFSET>,
                                GetDirect3D: GetDirect3D::<Identity, OFFSET>,
                                SetCurrentViewport: SetCurrentViewport::<Identity, OFFSET>,
                                GetCurrentViewport: GetCurrentViewport::<Identity, OFFSET>,
                                SetRenderTarget: SetRenderTarget::<Identity, OFFSET>,
                                GetRenderTarget: GetRenderTarget::<Identity, OFFSET>,
                                Begin: Begin::<Identity, OFFSET>,
                                BeginIndexed: BeginIndexed::<Identity, OFFSET>,
                                Vertex: Vertex::<Identity, OFFSET>,
                                Index: Index::<Identity, OFFSET>,
                                End: End::<Identity, OFFSET>,
                                GetRenderState: GetRenderState::<Identity, OFFSET>,
                                SetRenderState: SetRenderState::<Identity, OFFSET>,
                                GetLightState: GetLightState::<Identity, OFFSET>,
                                SetLightState: SetLightState::<Identity, OFFSET>,
                                SetTransform: SetTransform::<Identity, OFFSET>,
                                GetTransform: GetTransform::<Identity, OFFSET>,
                                MultiplyTransform: MultiplyTransform::<Identity, OFFSET>,
                                DrawPrimitive: DrawPrimitive::<Identity, OFFSET>,
                                DrawIndexedPrimitive: DrawIndexedPrimitive::<Identity, OFFSET>,
                                SetClipStatus: SetClipStatus::<Identity, OFFSET>,
                                GetClipStatus: GetClipStatus::<Identity, OFFSET>,
                                DrawPrimitiveStrided: DrawPrimitiveStrided::<Identity, OFFSET>,
                                DrawIndexedPrimitiveStrided: DrawIndexedPrimitiveStrided::<
                                    Identity,
                                    OFFSET,
                                >,
                                DrawPrimitiveVB: DrawPrimitiveVB::<Identity, OFFSET>,
                                DrawIndexedPrimitiveVB: DrawIndexedPrimitiveVB::<Identity, OFFSET>,
                                ComputeSphereVisibility: ComputeSphereVisibility::<Identity, OFFSET>,
                                GetTexture: GetTexture::<Identity, OFFSET>,
                                SetTexture: SetTexture::<Identity, OFFSET>,
                                GetTextureStageState: GetTextureStageState::<Identity, OFFSET>,
                                SetTextureStageState: SetTextureStageState::<Identity, OFFSET>,
                                ValidateDevice: ValidateDevice::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DDevice3 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DDevice3 {}
                    windows_core::imp::define_interface!(
                        IDirect3DDevice7,
                        IDirect3DDevice7_Vtbl,
                        0xf5049e79_4861_11d2_a407_00a0c90629a8
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DDevice7,
                        windows_core::IUnknown
                    );
                    impl IDirect3DDevice7 {
                        pub unsafe fn GetCaps(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC7,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetCaps)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EnumTextureFormats(
                            &self,
                            param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EnumTextureFormats)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn BeginScene(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).BeginScene)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EndScene(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EndScene)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetDirect3D(&self) -> windows_core::Result<IDirect3D7> {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetDirect3D)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn SetRenderTarget<P0>(
                            &self,
                            param0: P0,
                            param1: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetRenderTarget)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetRenderTarget(
                            &self,
                        ) -> windows_core::Result<
                            windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                        > {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetRenderTarget)(
                                    windows_core::Interface::as_raw(self),
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn Clear(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            param2: u32,
                            param3: u32,
                            param4: f32,
                            param5: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Clear)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                    param2,
                                    param3,
                                    param4,
                                    param5,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetViewport(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT7,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn MultiplyTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).MultiplyTransform)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetViewport(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT7,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL7,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL7,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetLight(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT7,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetLight)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetLight(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT7,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetLight)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetRenderState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetRenderState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn BeginStateBlock(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).BeginStateBlock)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn EndStateBlock(
                            &self,
                            param0: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).EndStateBlock)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn PreLoad<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).PreLoad)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawPrimitive)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawIndexedPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawIndexedPrimitive)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4 as _,
                                    param5,
                                    param6,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetClipStatus)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetClipStatus)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawPrimitiveStrided(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawPrimitiveStrided)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawIndexedPrimitiveStrided(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawIndexedPrimitiveStrided)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                    param3,
                                    param4 as _,
                                    param5,
                                    param6,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawPrimitiveVB<P1>(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: P1,
                            param2: u32,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<IDirect3DVertexBuffer7>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawPrimitiveVB)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                    param2,
                                    param3,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DrawIndexedPrimitiveVB<P1>(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: P1,
                            param2: u32,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<IDirect3DVertexBuffer7>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).DrawIndexedPrimitiveVB)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                    param2,
                                    param3,
                                    param4 as _,
                                    param5,
                                    param6,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn ComputeSphereVisibility(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D::D3DVECTOR,
                            param1: *mut f32,
                            param2: u32,
                            param3: u32,
                            param4: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).ComputeSphereVisibility)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                    param2,
                                    param3,
                                    param4 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetTexture(
                            &self,
                            param0: u32,
                        ) -> windows_core::Result<
                            windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                        > {
                            unsafe {
                                let mut result__ = core::mem::zeroed();
                                (windows_core::Interface::vtable(self).GetTexture)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    &mut result__,
                                )
                                .and_then(|| windows_core::Type::from_abi(result__))
                            }
                        }
                        pub unsafe fn SetTexture<P1>(
                            &self,
                            param0: u32,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P1: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetTexture)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetTextureStageState(
                            &self,
                            param0: u32,
                            param1: windows::Win32::Graphics::Direct3D9::D3DTEXTURESTAGESTATETYPE,
                            param2: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetTextureStageState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetTextureStageState(
                            &self,
                            param0: u32,
                            param1: windows::Win32::Graphics::Direct3D9::D3DTEXTURESTAGESTATETYPE,
                            param2: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetTextureStageState)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn ValidateDevice(
                            &self,
                            param0: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).ValidateDevice)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn ApplyStateBlock(
                            &self,
                            param0: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).ApplyStateBlock)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CaptureStateBlock(
                            &self,
                            param0: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).CaptureStateBlock)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DeleteStateBlock(
                            &self,
                            param0: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).DeleteStateBlock)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn CreateStateBlock(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DSTATEBLOCKTYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).CreateStateBlock)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Load<P0, P2>(
                            &self,
                            param0: P0,
                            param1: *mut windows::Win32::Foundation::POINT,
                            param2: P2,
                            param3: *mut windows::Win32::Foundation::RECT,
                            param4: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                            P2: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Load)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1 as _,
                                    param2.param().abi(),
                                    param3 as _,
                                    param4,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn LightEnable(
                            &self,
                            param0: u32,
                            param1: bool,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).LightEnable)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1.into(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetLightEnable(
                            &self,
                            param0: u32,
                            param1: *mut windows_core::BOOL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetLightEnable)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetClipPlane(
                            &self,
                            param0: u32,
                            param1: *mut f32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetClipPlane)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetClipPlane(
                            &self,
                            param0: u32,
                            param1: *mut f32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetClipPlane)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetInfo(
                            &self,
                            param0: u32,
                            param1: *mut core::ffi::c_void,
                            param2: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetInfo)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                    param2,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DDevice7_Vtbl { pub base__ : windows_core::IUnknown_Vtbl , pub GetCaps :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DDEVICEDESC7 ) -> windows_core::HRESULT , pub EnumTextureFormats :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK , *mut core::ffi::c_void ) -> windows_core::HRESULT , pub BeginScene :unsafe extern "system" fn ( * mut core::ffi::c_void , ) -> windows_core::HRESULT , pub EndScene :unsafe extern "system" fn ( * mut core::ffi::c_void , ) -> windows_core::HRESULT , pub GetDirect3D :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut * mut core::ffi::c_void ) -> windows_core::HRESULT , pub SetRenderTarget :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub GetRenderTarget :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut * mut core::ffi::c_void ) -> windows_core::HRESULT , pub Clear :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut windows::Win32::Graphics::Direct3D9:: D3DRECT , u32 , u32 , f32 , u32 ) -> windows_core::HRESULT , pub SetTransform :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DTRANSFORMSTATETYPE , *mut windows_numerics:: Matrix4x4 ) -> windows_core::HRESULT , pub GetTransform :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DTRANSFORMSTATETYPE , *mut windows_numerics:: Matrix4x4 ) -> windows_core::HRESULT , pub SetViewport :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DVIEWPORT7 ) -> windows_core::HRESULT , pub MultiplyTransform :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DTRANSFORMSTATETYPE , *mut windows_numerics:: Matrix4x4 ) -> windows_core::HRESULT , pub GetViewport :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DVIEWPORT7 ) -> windows_core::HRESULT , pub SetMaterial :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DMATERIAL7 ) -> windows_core::HRESULT , pub GetMaterial :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DMATERIAL7 ) -> windows_core::HRESULT , pub SetLight :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut windows::Win32::Graphics::Direct3D9:: D3DLIGHT7 ) -> windows_core::HRESULT , pub GetLight :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut windows::Win32::Graphics::Direct3D9:: D3DLIGHT7 ) -> windows_core::HRESULT , pub SetRenderState :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DRENDERSTATETYPE , u32 ) -> windows_core::HRESULT , pub GetRenderState :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DRENDERSTATETYPE , *mut u32 ) -> windows_core::HRESULT , pub BeginStateBlock :unsafe extern "system" fn ( * mut core::ffi::c_void , ) -> windows_core::HRESULT , pub EndStateBlock :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut u32 ) -> windows_core::HRESULT , pub PreLoad :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void ) -> windows_core::HRESULT , pub DrawPrimitive :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut core::ffi::c_void , u32 , u32 ) -> windows_core::HRESULT , pub DrawIndexedPrimitive :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut core::ffi::c_void , u32 , *mut u16 , u32 , u32 ) -> windows_core::HRESULT , pub SetClipStatus :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DCLIPSTATUS ) -> windows_core::HRESULT , pub GetClipStatus :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DCLIPSTATUS ) -> windows_core::HRESULT , pub DrawPrimitiveStrided :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA , u32 , u32 ) -> windows_core::HRESULT , pub DrawIndexedPrimitiveStrided :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , u32 , *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA , u32 , *mut u16 , u32 , u32 ) -> windows_core::HRESULT , pub DrawPrimitiveVB :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , * mut core::ffi::c_void , u32 , u32 , u32 ) -> windows_core::HRESULT , pub DrawIndexedPrimitiveVB :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DPRIMITIVETYPE , * mut core::ffi::c_void , u32 , u32 , *mut u16 , u32 , u32 ) -> windows_core::HRESULT , pub ComputeSphereVisibility :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D:: D3DVECTOR , *mut f32 , u32 , u32 , *mut u32 ) -> windows_core::HRESULT , pub GetTexture :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut * mut core::ffi::c_void ) -> windows_core::HRESULT , pub SetTexture :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , * mut core::ffi::c_void ) -> windows_core::HRESULT , pub GetTextureStageState :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , windows::Win32::Graphics::Direct3D9:: D3DTEXTURESTAGESTATETYPE , *mut u32 ) -> windows_core::HRESULT , pub SetTextureStageState :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , windows::Win32::Graphics::Direct3D9:: D3DTEXTURESTAGESTATETYPE , u32 ) -> windows_core::HRESULT , pub ValidateDevice :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut u32 ) -> windows_core::HRESULT , pub ApplyStateBlock :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub CaptureStateBlock :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub DeleteStateBlock :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub CreateStateBlock :unsafe extern "system" fn ( * mut core::ffi::c_void , windows::Win32::Graphics::Direct3D9:: D3DSTATEBLOCKTYPE , *mut u32 ) -> windows_core::HRESULT , pub Load :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void , *mut windows::Win32::Foundation:: POINT , * mut core::ffi::c_void , *mut windows::Win32::Foundation:: RECT , u32 ) -> windows_core::HRESULT , pub LightEnable :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , windows_core::BOOL ) -> windows_core::HRESULT , pub GetLightEnable :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut windows_core::BOOL ) -> windows_core::HRESULT , pub SetClipPlane :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut f32 ) -> windows_core::HRESULT , pub GetClipPlane :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut f32 ) -> windows_core::HRESULT , pub GetInfo :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , }
                    pub trait IDirect3DDevice7_Impl: windows_core::IUnknownImpl {
                        fn GetCaps(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC7,
                        ) -> windows_core::Result<()>;
                        fn EnumTextureFormats(
                            &self,
                            param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                            param1: *mut core::ffi::c_void,
                        ) -> windows_core::Result<()>;
                        fn BeginScene(&self) -> windows_core::Result<()>;
                        fn EndScene(&self) -> windows_core::Result<()>;
                        fn GetDirect3D(&self) -> windows_core::Result<IDirect3D7>;
                        fn SetRenderTarget(
                            &self,
                            param0: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn GetRenderTarget(
                            &self,
                        ) -> windows_core::Result<
                            windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                        >;
                        fn Clear(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            param2: u32,
                            param3: u32,
                            param4: f32,
                            param5: u32,
                        ) -> windows_core::Result<()>;
                        fn SetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn GetTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn SetViewport(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT7,
                        ) -> windows_core::Result<()>;
                        fn MultiplyTransform(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                            param1: *mut windows_numerics::Matrix4x4,
                        ) -> windows_core::Result<()>;
                        fn GetViewport(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT7,
                        ) -> windows_core::Result<()>;
                        fn SetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL7,
                        ) -> windows_core::Result<()>;
                        fn GetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL7,
                        ) -> windows_core::Result<()>;
                        fn SetLight(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT7,
                        ) -> windows_core::Result<()>;
                        fn GetLight(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT7,
                        ) -> windows_core::Result<()>;
                        fn SetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn GetRenderState(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn BeginStateBlock(&self) -> windows_core::Result<()>;
                        fn EndStateBlock(&self, param0: *mut u32) -> windows_core::Result<()>;
                        fn PreLoad(
                            &self,
                            param0: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                        ) -> windows_core::Result<()>;
                        fn DrawPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawIndexedPrimitive(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                        fn SetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()>;
                        fn GetClipStatus(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                        ) -> windows_core::Result<()>;
                        fn DrawPrimitiveStrided(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawIndexedPrimitiveStrided(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: u32,
                            param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawPrimitiveVB(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows_core::Ref<'_, IDirect3DVertexBuffer7>,
                            param2: u32,
                            param3: u32,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn DrawIndexedPrimitiveVB(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                            param1: windows_core::Ref<'_, IDirect3DVertexBuffer7>,
                            param2: u32,
                            param3: u32,
                            param4: *mut u16,
                            param5: u32,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                        fn ComputeSphereVisibility(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D::D3DVECTOR,
                            param1: *mut f32,
                            param2: u32,
                            param3: u32,
                            param4: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn GetTexture(
                            &self,
                            param0: u32,
                        ) -> windows_core::Result<
                            windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                        >;
                        fn SetTexture(
                            &self,
                            param0: u32,
                            param1: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                        ) -> windows_core::Result<()>;
                        fn GetTextureStageState(
                            &self,
                            param0: u32,
                            param1: windows::Win32::Graphics::Direct3D9::D3DTEXTURESTAGESTATETYPE,
                            param2: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn SetTextureStageState(
                            &self,
                            param0: u32,
                            param1: windows::Win32::Graphics::Direct3D9::D3DTEXTURESTAGESTATETYPE,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn ValidateDevice(&self, param0: *mut u32) -> windows_core::Result<()>;
                        fn ApplyStateBlock(&self, param0: u32) -> windows_core::Result<()>;
                        fn CaptureStateBlock(&self, param0: u32) -> windows_core::Result<()>;
                        fn DeleteStateBlock(&self, param0: u32) -> windows_core::Result<()>;
                        fn CreateStateBlock(
                            &self,
                            param0: windows::Win32::Graphics::Direct3D9::D3DSTATEBLOCKTYPE,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn Load(
                            &self,
                            param0: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                            param1: *mut windows::Win32::Foundation::POINT,
                            param2: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface7,
                            >,
                            param3: *mut windows::Win32::Foundation::RECT,
                            param4: u32,
                        ) -> windows_core::Result<()>;
                        fn LightEnable(
                            &self,
                            param0: u32,
                            param1: windows_core::BOOL,
                        ) -> windows_core::Result<()>;
                        fn GetLightEnable(
                            &self,
                            param0: u32,
                            param1: *mut windows_core::BOOL,
                        ) -> windows_core::Result<()>;
                        fn SetClipPlane(
                            &self,
                            param0: u32,
                            param1: *mut f32,
                        ) -> windows_core::Result<()>;
                        fn GetClipPlane(
                            &self,
                            param0: u32,
                            param1: *mut f32,
                        ) -> windows_core::Result<()>;
                        fn GetInfo(
                            &self,
                            param0: u32,
                            param1: *mut core::ffi::c_void,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DDevice7_Vtbl {
                        pub const fn new<Identity: IDirect3DDevice7_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn GetCaps<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DDEVICEDESC7,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetCaps(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn EnumTextureFormats<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : windows::Win32::Graphics::Direct3D9:: LPD3DENUMPIXELFORMATSCALLBACK,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::EnumTextureFormats(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn BeginScene<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::BeginScene(this).into()
                                }
                            }
                            unsafe extern "system" fn EndScene<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::EndScene(this).into()
                                }
                            }
                            unsafe extern "system" fn GetDirect3D<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice7_Impl::GetDirect3D(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn SetRenderTarget<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetRenderTarget(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetRenderTarget<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice7_Impl::GetRenderTarget(this) {
                                        Ok(ok__) => {
                                            param0.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn Clear<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                                param2: u32,
                                param3: u32,
                                param4: f32,
                                param5: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::Clear(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetTransform<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetTransform<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetViewport<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT7,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn MultiplyTransform<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DTRANSFORMSTATETYPE,
                                param1: *mut windows_numerics::Matrix4x4,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::MultiplyTransform(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetViewport<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT7,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetMaterial<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL7,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetMaterial<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL7,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetLight<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT7,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetLight<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT7,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetRenderState<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetRenderState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetRenderState<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DRENDERSTATETYPE,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetRenderState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn BeginStateBlock<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::BeginStateBlock(this).into()
                                }
                            }
                            unsafe extern "system" fn EndStateBlock<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::EndStateBlock(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn PreLoad<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::PreLoad(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawPrimitive<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::DrawPrimitive(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawIndexedPrimitive<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                                param4: *mut u16,
                                param5: u32,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::DrawIndexedPrimitive(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetClipStatus<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetClipStatus(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetClipStatus<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DCLIPSTATUS,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetClipStatus(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawPrimitiveStrided<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::DrawPrimitiveStrided(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawIndexedPrimitiveStrided<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: u32,
                                param2 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                                param3: u32,
                                param4: *mut u16,
                                param5: u32,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::DrawIndexedPrimitiveStrided(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawPrimitiveVB<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: *mut core::ffi::c_void,
                                param2: u32,
                                param3: u32,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::DrawPrimitiveVB(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DrawIndexedPrimitiveVB<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DPRIMITIVETYPE,
                                param1: *mut core::ffi::c_void,
                                param2: u32,
                                param3: u32,
                                param4: *mut u16,
                                param5: u32,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::DrawIndexedPrimitiveVB(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn ComputeSphereVisibility<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D::D3DVECTOR,
                                param1: *mut f32,
                                param2: u32,
                                param3: u32,
                                param4: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::ComputeSphereVisibility(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetTexture<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    match IDirect3DDevice7_Impl::GetTexture(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    ) {
                                        Ok(ok__) => {
                                            param1.write(core::mem::transmute(ok__));
                                            windows_core::HRESULT(0)
                                        }
                                        Err(err) => err.into(),
                                    }
                                }
                            }
                            unsafe extern "system" fn SetTexture<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetTexture(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetTextureStageState<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1 : windows::Win32::Graphics::Direct3D9:: D3DTEXTURESTAGESTATETYPE,
                                param2: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetTextureStageState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetTextureStageState<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1 : windows::Win32::Graphics::Direct3D9:: D3DTEXTURESTAGESTATETYPE,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetTextureStageState(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn ValidateDevice<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::ValidateDevice(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn ApplyStateBlock<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::ApplyStateBlock(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CaptureStateBlock<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::CaptureStateBlock(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DeleteStateBlock<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::DeleteStateBlock(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn CreateStateBlock<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: windows::Win32::Graphics::Direct3D9::D3DSTATEBLOCKTYPE,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::CreateStateBlock(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Load<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut windows::Win32::Foundation::POINT,
                                param2: *mut core::ffi::c_void,
                                param3: *mut windows::Win32::Foundation::RECT,
                                param4: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::Load(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn LightEnable<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: windows_core::BOOL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::LightEnable(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetLightEnable<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows_core::BOOL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetLightEnable(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetClipPlane<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut f32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::SetClipPlane(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetClipPlane<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut f32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetClipPlane(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetInfo<
                                Identity: IDirect3DDevice7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut core::ffi::c_void,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DDevice7_Impl::GetInfo(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                GetCaps: GetCaps::<Identity, OFFSET>,
                                EnumTextureFormats: EnumTextureFormats::<Identity, OFFSET>,
                                BeginScene: BeginScene::<Identity, OFFSET>,
                                EndScene: EndScene::<Identity, OFFSET>,
                                GetDirect3D: GetDirect3D::<Identity, OFFSET>,
                                SetRenderTarget: SetRenderTarget::<Identity, OFFSET>,
                                GetRenderTarget: GetRenderTarget::<Identity, OFFSET>,
                                Clear: Clear::<Identity, OFFSET>,
                                SetTransform: SetTransform::<Identity, OFFSET>,
                                GetTransform: GetTransform::<Identity, OFFSET>,
                                SetViewport: SetViewport::<Identity, OFFSET>,
                                MultiplyTransform: MultiplyTransform::<Identity, OFFSET>,
                                GetViewport: GetViewport::<Identity, OFFSET>,
                                SetMaterial: SetMaterial::<Identity, OFFSET>,
                                GetMaterial: GetMaterial::<Identity, OFFSET>,
                                SetLight: SetLight::<Identity, OFFSET>,
                                GetLight: GetLight::<Identity, OFFSET>,
                                SetRenderState: SetRenderState::<Identity, OFFSET>,
                                GetRenderState: GetRenderState::<Identity, OFFSET>,
                                BeginStateBlock: BeginStateBlock::<Identity, OFFSET>,
                                EndStateBlock: EndStateBlock::<Identity, OFFSET>,
                                PreLoad: PreLoad::<Identity, OFFSET>,
                                DrawPrimitive: DrawPrimitive::<Identity, OFFSET>,
                                DrawIndexedPrimitive: DrawIndexedPrimitive::<Identity, OFFSET>,
                                SetClipStatus: SetClipStatus::<Identity, OFFSET>,
                                GetClipStatus: GetClipStatus::<Identity, OFFSET>,
                                DrawPrimitiveStrided: DrawPrimitiveStrided::<Identity, OFFSET>,
                                DrawIndexedPrimitiveStrided: DrawIndexedPrimitiveStrided::<
                                    Identity,
                                    OFFSET,
                                >,
                                DrawPrimitiveVB: DrawPrimitiveVB::<Identity, OFFSET>,
                                DrawIndexedPrimitiveVB: DrawIndexedPrimitiveVB::<Identity, OFFSET>,
                                ComputeSphereVisibility: ComputeSphereVisibility::<Identity, OFFSET>,
                                GetTexture: GetTexture::<Identity, OFFSET>,
                                SetTexture: SetTexture::<Identity, OFFSET>,
                                GetTextureStageState: GetTextureStageState::<Identity, OFFSET>,
                                SetTextureStageState: SetTextureStageState::<Identity, OFFSET>,
                                ValidateDevice: ValidateDevice::<Identity, OFFSET>,
                                ApplyStateBlock: ApplyStateBlock::<Identity, OFFSET>,
                                CaptureStateBlock: CaptureStateBlock::<Identity, OFFSET>,
                                DeleteStateBlock: DeleteStateBlock::<Identity, OFFSET>,
                                CreateStateBlock: CreateStateBlock::<Identity, OFFSET>,
                                Load: Load::<Identity, OFFSET>,
                                LightEnable: LightEnable::<Identity, OFFSET>,
                                GetLightEnable: GetLightEnable::<Identity, OFFSET>,
                                SetClipPlane: SetClipPlane::<Identity, OFFSET>,
                                GetClipPlane: GetClipPlane::<Identity, OFFSET>,
                                GetInfo: GetInfo::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DDevice7 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DDevice7 {}
                    windows_core::imp::define_interface!(
                        IDirect3DExecuteBuffer,
                        IDirect3DExecuteBuffer_Vtbl,
                        0x4417c145_33ad_11cf_816f_0000c020156e
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DExecuteBuffer,
                        windows_core::IUnknown
                    );
                    impl IDirect3DExecuteBuffer {
                        pub unsafe fn Initialize<P0>(
                            &self,
                            param0: P0,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Initialize)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Lock(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Lock)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Unlock(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Unlock)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetExecuteData(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEDATA,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetExecuteData)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetExecuteData(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEDATA,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetExecuteData)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Validate(
                            &self,
                            param0: *mut u32,
                            param1: windows::Win32::Graphics::Direct3D9::LPD3DVALIDATECALLBACK,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Validate)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1,
                                    param2 as _,
                                    param3,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Optimize(&self, param0: u32) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Optimize)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DExecuteBuffer_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub Initialize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                        )
                            -> windows_core::HRESULT,
                        pub Lock: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                        )
                            -> windows_core::HRESULT,
                        pub Unlock: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub SetExecuteData: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEDATA,
                        )
                            -> windows_core::HRESULT,
                        pub GetExecuteData: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEDATA,
                        )
                            -> windows_core::HRESULT,
                        pub Validate: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut u32,
                            windows::Win32::Graphics::Direct3D9::LPD3DVALIDATECALLBACK,
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub Optimize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DExecuteBuffer_Impl: windows_core::IUnknownImpl {
                        fn Initialize(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice>,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                        ) -> windows_core::Result<()>;
                        fn Lock(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEBUFFERDESC,
                        ) -> windows_core::Result<()>;
                        fn Unlock(&self) -> windows_core::Result<()>;
                        fn SetExecuteData(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEDATA,
                        ) -> windows_core::Result<()>;
                        fn GetExecuteData(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEDATA,
                        ) -> windows_core::Result<()>;
                        fn Validate(
                            &self,
                            param0: *mut u32,
                            param1: windows::Win32::Graphics::Direct3D9::LPD3DVALIDATECALLBACK,
                            param2: *mut core::ffi::c_void,
                            param3: u32,
                        ) -> windows_core::Result<()>;
                        fn Optimize(&self, param0: u32) -> windows_core::Result<()>;
                    }
                    impl IDirect3DExecuteBuffer_Vtbl {
                        pub const fn new<
                            Identity: IDirect3DExecuteBuffer_Impl,
                            const OFFSET: isize,
                        >() -> Self {
                            unsafe extern "system" fn Initialize<
                                Identity: IDirect3DExecuteBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1 : *mut windows::Win32::Graphics::Direct3D9:: D3DEXECUTEBUFFERDESC,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DExecuteBuffer_Impl::Initialize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Lock<
                                Identity: IDirect3DExecuteBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DEXECUTEBUFFERDESC,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DExecuteBuffer_Impl::Lock(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Unlock<
                                Identity: IDirect3DExecuteBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DExecuteBuffer_Impl::Unlock(this).into()
                                }
                            }
                            unsafe extern "system" fn SetExecuteData<
                                Identity: IDirect3DExecuteBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEDATA,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DExecuteBuffer_Impl::SetExecuteData(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetExecuteData<
                                Identity: IDirect3DExecuteBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DEXECUTEDATA,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DExecuteBuffer_Impl::GetExecuteData(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Validate<
                                Identity: IDirect3DExecuteBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut u32,
                                param1: windows::Win32::Graphics::Direct3D9::LPD3DVALIDATECALLBACK,
                                param2: *mut core::ffi::c_void,
                                param3: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DExecuteBuffer_Impl::Validate(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Optimize<
                                Identity: IDirect3DExecuteBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DExecuteBuffer_Impl::Optimize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Initialize: Initialize::<Identity, OFFSET>,
                                Lock: Lock::<Identity, OFFSET>,
                                Unlock: Unlock::<Identity, OFFSET>,
                                SetExecuteData: SetExecuteData::<Identity, OFFSET>,
                                GetExecuteData: GetExecuteData::<Identity, OFFSET>,
                                Validate: Validate::<Identity, OFFSET>,
                                Optimize: Optimize::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DExecuteBuffer as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DExecuteBuffer {}
                    windows_core::imp::define_interface!(
                        IDirect3DLight,
                        IDirect3DLight_Vtbl,
                        0x4417c142_33ad_11cf_816f_0000c020156e
                    );
                    windows_core::imp::interface_hierarchy!(IDirect3DLight, windows_core::IUnknown);
                    impl IDirect3DLight {
                        pub unsafe fn Initialize<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3D>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Initialize)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetLight(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetLight)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetLight(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetLight)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DLight_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub Initialize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub SetLight: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT,
                        )
                            -> windows_core::HRESULT,
                        pub GetLight: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DLight_Impl: windows_core::IUnknownImpl {
                        fn Initialize(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3D>,
                        ) -> windows_core::Result<()>;
                        fn SetLight(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT,
                        ) -> windows_core::Result<()>;
                        fn GetLight(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DLight_Vtbl {
                        pub const fn new<Identity: IDirect3DLight_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn Initialize<
                                Identity: IDirect3DLight_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DLight_Impl::Initialize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetLight<
                                Identity: IDirect3DLight_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DLight_Impl::SetLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetLight<
                                Identity: IDirect3DLight_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHT,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DLight_Impl::GetLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Initialize: Initialize::<Identity, OFFSET>,
                                SetLight: SetLight::<Identity, OFFSET>,
                                GetLight: GetLight::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DLight as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DLight {}
                    windows_core::imp::define_interface!(
                        IDirect3DMaterial,
                        IDirect3DMaterial_Vtbl,
                        0x4417c144_33ad_11cf_816f_0000c020156e
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DMaterial,
                        windows_core::IUnknown
                    );
                    impl IDirect3DMaterial {
                        pub unsafe fn Initialize<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3D>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Initialize)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetHandle<P0>(
                            &self,
                            param0: P0,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetHandle)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Reserve(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Reserve)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Unreserve(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Unreserve)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DMaterial_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub Initialize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub SetMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        )
                            -> windows_core::HRESULT,
                        pub GetMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        )
                            -> windows_core::HRESULT,
                        pub GetHandle: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                        pub Reserve: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub Unreserve: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DMaterial_Impl: windows_core::IUnknownImpl {
                        fn Initialize(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3D>,
                        ) -> windows_core::Result<()>;
                        fn SetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()>;
                        fn GetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()>;
                        fn GetHandle(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice>,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn Reserve(&self) -> windows_core::Result<()>;
                        fn Unreserve(&self) -> windows_core::Result<()>;
                    }
                    impl IDirect3DMaterial_Vtbl {
                        pub const fn new<Identity: IDirect3DMaterial_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn Initialize<
                                Identity: IDirect3DMaterial_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial_Impl::Initialize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetMaterial<
                                Identity: IDirect3DMaterial_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial_Impl::SetMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetMaterial<
                                Identity: IDirect3DMaterial_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial_Impl::GetMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetHandle<
                                Identity: IDirect3DMaterial_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial_Impl::GetHandle(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Reserve<
                                Identity: IDirect3DMaterial_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial_Impl::Reserve(this).into()
                                }
                            }
                            unsafe extern "system" fn Unreserve<
                                Identity: IDirect3DMaterial_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial_Impl::Unreserve(this).into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Initialize: Initialize::<Identity, OFFSET>,
                                SetMaterial: SetMaterial::<Identity, OFFSET>,
                                GetMaterial: GetMaterial::<Identity, OFFSET>,
                                GetHandle: GetHandle::<Identity, OFFSET>,
                                Reserve: Reserve::<Identity, OFFSET>,
                                Unreserve: Unreserve::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DMaterial as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DMaterial {}
                    windows_core::imp::define_interface!(
                        IDirect3DMaterial2,
                        IDirect3DMaterial2_Vtbl,
                        0x93281503_8cf8_11d0_89ab_00a0c9054129
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DMaterial2,
                        windows_core::IUnknown
                    );
                    impl IDirect3DMaterial2 {
                        pub unsafe fn SetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetHandle<P0>(
                            &self,
                            param0: P0,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetHandle)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DMaterial2_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub SetMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        )
                            -> windows_core::HRESULT,
                        pub GetMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        )
                            -> windows_core::HRESULT,
                        pub GetHandle: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DMaterial2_Impl: windows_core::IUnknownImpl {
                        fn SetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()>;
                        fn GetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()>;
                        fn GetHandle(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice2>,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DMaterial2_Vtbl {
                        pub const fn new<Identity: IDirect3DMaterial2_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn SetMaterial<
                                Identity: IDirect3DMaterial2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial2_Impl::SetMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetMaterial<
                                Identity: IDirect3DMaterial2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial2_Impl::GetMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetHandle<
                                Identity: IDirect3DMaterial2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial2_Impl::GetHandle(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                SetMaterial: SetMaterial::<Identity, OFFSET>,
                                GetMaterial: GetMaterial::<Identity, OFFSET>,
                                GetHandle: GetHandle::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DMaterial2 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DMaterial2 {}
                    windows_core::imp::define_interface!(
                        IDirect3DMaterial3,
                        IDirect3DMaterial3_Vtbl,
                        0xca9c46f4_d3c5_11d1_b75a_00600852b312
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DMaterial3,
                        windows_core::IUnknown
                    );
                    impl IDirect3DMaterial3 {
                        pub unsafe fn SetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetMaterial)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetHandle<P0>(
                            &self,
                            param0: P0,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice3>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetHandle)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DMaterial3_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub SetMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        )
                            -> windows_core::HRESULT,
                        pub GetMaterial: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        )
                            -> windows_core::HRESULT,
                        pub GetHandle: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DMaterial3_Impl: windows_core::IUnknownImpl {
                        fn SetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()>;
                        fn GetMaterial(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                        ) -> windows_core::Result<()>;
                        fn GetHandle(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice3>,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DMaterial3_Vtbl {
                        pub const fn new<Identity: IDirect3DMaterial3_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn SetMaterial<
                                Identity: IDirect3DMaterial3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial3_Impl::SetMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetMaterial<
                                Identity: IDirect3DMaterial3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DMATERIAL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial3_Impl::GetMaterial(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetHandle<
                                Identity: IDirect3DMaterial3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DMaterial3_Impl::GetHandle(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                SetMaterial: SetMaterial::<Identity, OFFSET>,
                                GetMaterial: GetMaterial::<Identity, OFFSET>,
                                GetHandle: GetHandle::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DMaterial3 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DMaterial3 {}
                    windows_core::imp::define_interface!(
                        IDirect3DTexture,
                        IDirect3DTexture_Vtbl,
                        0x2cdcd9e0_25a0_11cf_a31a_00aa00b93356
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DTexture,
                        windows_core::IUnknown
                    );
                    impl IDirect3DTexture {
                        pub unsafe fn Initialize<P0, P1>(
                            &self,
                            param0: P0,
                            param1: P1,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice>,
                            P1: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Initialize)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetHandle<P0>(
                            &self,
                            param0: P0,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetHandle)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn PaletteChanged(
                            &self,
                            param0: u32,
                            param1: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).PaletteChanged)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Load<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DTexture>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Load)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Unload(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Unload)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DTexture_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub Initialize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetHandle: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                        pub PaletteChanged: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub Load: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub Unload: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DTexture_Impl: windows_core::IUnknownImpl {
                        fn Initialize(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice>,
                            param1: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                        ) -> windows_core::Result<()>;
                        fn GetHandle(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice>,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn PaletteChanged(
                            &self,
                            param0: u32,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn Load(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DTexture>,
                        ) -> windows_core::Result<()>;
                        fn Unload(&self) -> windows_core::Result<()>;
                    }
                    impl IDirect3DTexture_Vtbl {
                        pub const fn new<Identity: IDirect3DTexture_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn Initialize<
                                Identity: IDirect3DTexture_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DTexture_Impl::Initialize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetHandle<
                                Identity: IDirect3DTexture_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DTexture_Impl::GetHandle(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn PaletteChanged<
                                Identity: IDirect3DTexture_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DTexture_Impl::PaletteChanged(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Load<
                                Identity: IDirect3DTexture_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DTexture_Impl::Load(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Unload<
                                Identity: IDirect3DTexture_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DTexture_Impl::Unload(this).into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Initialize: Initialize::<Identity, OFFSET>,
                                GetHandle: GetHandle::<Identity, OFFSET>,
                                PaletteChanged: PaletteChanged::<Identity, OFFSET>,
                                Load: Load::<Identity, OFFSET>,
                                Unload: Unload::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DTexture as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DTexture {}
                    windows_core::imp::define_interface!(
                        IDirect3DTexture2,
                        IDirect3DTexture2_Vtbl,
                        0x93281502_8cf8_11d0_89ab_00a0c9054129
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DTexture2,
                        windows_core::IUnknown
                    );
                    impl IDirect3DTexture2 {
                        pub unsafe fn GetHandle<P0>(
                            &self,
                            param0: P0,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetHandle)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn PaletteChanged(
                            &self,
                            param0: u32,
                            param1: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).PaletteChanged)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Load<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DTexture2>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Load)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DTexture2_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub GetHandle: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                        pub PaletteChanged: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub Load: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DTexture2_Impl: windows_core::IUnknownImpl {
                        fn GetHandle(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice2>,
                            param1: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn PaletteChanged(
                            &self,
                            param0: u32,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn Load(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DTexture2>,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DTexture2_Vtbl {
                        pub const fn new<Identity: IDirect3DTexture2_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn GetHandle<
                                Identity: IDirect3DTexture2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DTexture2_Impl::GetHandle(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn PaletteChanged<
                                Identity: IDirect3DTexture2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DTexture2_Impl::PaletteChanged(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Load<
                                Identity: IDirect3DTexture2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DTexture2_Impl::Load(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                GetHandle: GetHandle::<Identity, OFFSET>,
                                PaletteChanged: PaletteChanged::<Identity, OFFSET>,
                                Load: Load::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DTexture2 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DTexture2 {}
                    windows_core::imp::define_interface!(
                        IDirect3DVertexBuffer,
                        IDirect3DVertexBuffer_Vtbl,
                        0x7a503555_4a83_11d1_a5db_00a0c90367f8
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DVertexBuffer,
                        windows_core::IUnknown
                    );
                    impl IDirect3DVertexBuffer {
                        pub unsafe fn Lock(
                            &self,
                            param0: u32,
                            param1: *mut *mut core::ffi::c_void,
                            param2: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Lock)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                    param2 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Unlock(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Unlock)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn ProcessVertices<P3, P5>(
                            &self,
                            param0: u32,
                            param1: u32,
                            param2: u32,
                            param3: P3,
                            param4: u32,
                            param5: P5,
                            param6: u32,
                        ) -> windows_core::Result<()>
                        where
                            P3: windows_core::Param<IDirect3DVertexBuffer>,
                            P5: windows_core::Param<IDirect3DDevice3>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).ProcessVertices)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2,
                                    param3.param().abi(),
                                    param4,
                                    param5.param().abi(),
                                    param6,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetVertexBufferDesc(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetVertexBufferDesc)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Optimize<P0>(
                            &self,
                            param0: P0,
                            param1: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice3>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Optimize)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DVertexBuffer_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub Lock: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            *mut *mut core::ffi::c_void,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                        pub Unlock: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub ProcessVertices: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            u32,
                            u32,
                            *mut core::ffi::c_void,
                            u32,
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub GetVertexBufferDesc: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                        )
                            -> windows_core::HRESULT,
                        pub Optimize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DVertexBuffer_Impl: windows_core::IUnknownImpl {
                        fn Lock(
                            &self,
                            param0: u32,
                            param1: *mut *mut core::ffi::c_void,
                            param2: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn Unlock(&self) -> windows_core::Result<()>;
                        fn ProcessVertices(
                            &self,
                            param0: u32,
                            param1: u32,
                            param2: u32,
                            param3: windows_core::Ref<'_, IDirect3DVertexBuffer>,
                            param4: u32,
                            param5: windows_core::Ref<'_, IDirect3DDevice3>,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                        fn GetVertexBufferDesc(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                        ) -> windows_core::Result<()>;
                        fn Optimize(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice3>,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DVertexBuffer_Vtbl {
                        pub const fn new<
                            Identity: IDirect3DVertexBuffer_Impl,
                            const OFFSET: isize,
                        >() -> Self {
                            unsafe extern "system" fn Lock<
                                Identity: IDirect3DVertexBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut *mut core::ffi::c_void,
                                param2: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer_Impl::Lock(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Unlock<
                                Identity: IDirect3DVertexBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer_Impl::Unlock(this).into()
                                }
                            }
                            unsafe extern "system" fn ProcessVertices<
                                Identity: IDirect3DVertexBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: u32,
                                param2: u32,
                                param3: *mut core::ffi::c_void,
                                param4: u32,
                                param5: *mut core::ffi::c_void,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer_Impl::ProcessVertices(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetVertexBufferDesc<
                                Identity: IDirect3DVertexBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DVERTEXBUFFERDESC,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer_Impl::GetVertexBufferDesc(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Optimize<
                                Identity: IDirect3DVertexBuffer_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer_Impl::Optimize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Lock: Lock::<Identity, OFFSET>,
                                Unlock: Unlock::<Identity, OFFSET>,
                                ProcessVertices: ProcessVertices::<Identity, OFFSET>,
                                GetVertexBufferDesc: GetVertexBufferDesc::<Identity, OFFSET>,
                                Optimize: Optimize::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DVertexBuffer as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DVertexBuffer {}
                    windows_core::imp::define_interface!(
                        IDirect3DVertexBuffer7,
                        IDirect3DVertexBuffer7_Vtbl,
                        0xf5049e7d_4861_11d2_a407_00a0c90629a8
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DVertexBuffer7,
                        windows_core::IUnknown
                    );
                    impl IDirect3DVertexBuffer7 {
                        pub unsafe fn Lock(
                            &self,
                            param0: u32,
                            param1: *mut *mut core::ffi::c_void,
                            param2: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Lock)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                    param2 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Unlock(&self) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Unlock)(
                                    windows_core::Interface::as_raw(self),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn ProcessVertices<P3, P5>(
                            &self,
                            param0: u32,
                            param1: u32,
                            param2: u32,
                            param3: P3,
                            param4: u32,
                            param5: P5,
                            param6: u32,
                        ) -> windows_core::Result<()>
                        where
                            P3: windows_core::Param<IDirect3DVertexBuffer7>,
                            P5: windows_core::Param<IDirect3DDevice7>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).ProcessVertices)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2,
                                    param3.param().abi(),
                                    param4,
                                    param5.param().abi(),
                                    param6,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetVertexBufferDesc(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetVertexBufferDesc)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Optimize<P0>(
                            &self,
                            param0: P0,
                            param1: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DDevice7>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Optimize)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    param1,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn ProcessVerticesStrided<P5>(
                            &self,
                            param0: u32,
                            param1: u32,
                            param2: u32,
                            param3 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param4: u32,
                            param5: P5,
                            param6: u32,
                        ) -> windows_core::Result<()>
                        where
                            P5: windows_core::Param<IDirect3DDevice7>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).ProcessVerticesStrided)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1,
                                    param2,
                                    param3 as _,
                                    param4,
                                    param5.param().abi(),
                                    param6,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DVertexBuffer7_Vtbl { pub base__ : windows_core::IUnknown_Vtbl , pub Lock :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , *mut *mut core::ffi::c_void , *mut u32 ) -> windows_core::HRESULT , pub Unlock :unsafe extern "system" fn ( * mut core::ffi::c_void , ) -> windows_core::HRESULT , pub ProcessVertices :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , u32 , u32 , * mut core::ffi::c_void , u32 , * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub GetVertexBufferDesc :unsafe extern "system" fn ( * mut core::ffi::c_void , *mut windows::Win32::Graphics::Direct3D9:: D3DVERTEXBUFFERDESC ) -> windows_core::HRESULT , pub Optimize :unsafe extern "system" fn ( * mut core::ffi::c_void , * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , pub ProcessVerticesStrided :unsafe extern "system" fn ( * mut core::ffi::c_void , u32 , u32 , u32 , *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA , u32 , * mut core::ffi::c_void , u32 ) -> windows_core::HRESULT , }
                    pub trait IDirect3DVertexBuffer7_Impl: windows_core::IUnknownImpl {
                        fn Lock(
                            &self,
                            param0: u32,
                            param1: *mut *mut core::ffi::c_void,
                            param2: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn Unlock(&self) -> windows_core::Result<()>;
                        fn ProcessVertices(
                            &self,
                            param0: u32,
                            param1: u32,
                            param2: u32,
                            param3: windows_core::Ref<'_, IDirect3DVertexBuffer7>,
                            param4: u32,
                            param5: windows_core::Ref<'_, IDirect3DDevice7>,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                        fn GetVertexBufferDesc(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVERTEXBUFFERDESC,
                        ) -> windows_core::Result<()>;
                        fn Optimize(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DDevice7>,
                            param1: u32,
                        ) -> windows_core::Result<()>;
                        fn ProcessVerticesStrided(
                            &self,
                            param0: u32,
                            param1: u32,
                            param2: u32,
                            param3 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                            param4: u32,
                            param5: windows_core::Ref<'_, IDirect3DDevice7>,
                            param6: u32,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DVertexBuffer7_Vtbl {
                        pub const fn new<
                            Identity: IDirect3DVertexBuffer7_Impl,
                            const OFFSET: isize,
                        >() -> Self {
                            unsafe extern "system" fn Lock<
                                Identity: IDirect3DVertexBuffer7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut *mut core::ffi::c_void,
                                param2: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer7_Impl::Lock(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Unlock<
                                Identity: IDirect3DVertexBuffer7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer7_Impl::Unlock(this).into()
                                }
                            }
                            unsafe extern "system" fn ProcessVertices<
                                Identity: IDirect3DVertexBuffer7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: u32,
                                param2: u32,
                                param3: *mut core::ffi::c_void,
                                param4: u32,
                                param5: *mut core::ffi::c_void,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer7_Impl::ProcessVertices(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetVertexBufferDesc<
                                Identity: IDirect3DVertexBuffer7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0 : *mut windows::Win32::Graphics::Direct3D9:: D3DVERTEXBUFFERDESC,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer7_Impl::GetVertexBufferDesc(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Optimize<
                                Identity: IDirect3DVertexBuffer7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer7_Impl::Optimize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn ProcessVerticesStrided<
                                Identity: IDirect3DVertexBuffer7_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: u32,
                                param2: u32,
                                param3 : *mut windows::Win32::Graphics::Direct3D9:: D3DDRAWPRIMITIVESTRIDEDDATA,
                                param4: u32,
                                param5: *mut core::ffi::c_void,
                                param6: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DVertexBuffer7_Impl::ProcessVerticesStrided(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                        core::mem::transmute_copy(&param6),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Lock: Lock::<Identity, OFFSET>,
                                Unlock: Unlock::<Identity, OFFSET>,
                                ProcessVertices: ProcessVertices::<Identity, OFFSET>,
                                GetVertexBufferDesc: GetVertexBufferDesc::<Identity, OFFSET>,
                                Optimize: Optimize::<Identity, OFFSET>,
                                ProcessVerticesStrided: ProcessVerticesStrided::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DVertexBuffer7 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DVertexBuffer7 {}
                    windows_core::imp::define_interface!(
                        IDirect3DViewport,
                        IDirect3DViewport_Vtbl,
                        0x4417c146_33ad_11cf_816f_0000c020156e
                    );
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DViewport,
                        windows_core::IUnknown
                    );
                    impl IDirect3DViewport {
                        pub unsafe fn Initialize<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3D>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).Initialize)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetViewport(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetViewport(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetViewport)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn TransformVertices(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DTRANSFORMDATA,
                            param2: u32,
                            param3: *mut u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).TransformVertices)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                    param2,
                                    param3 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn LightElements(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHTDATA,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).LightElements)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetBackground(
                            &self,
                            param0: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetBackground)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetBackground(
                            &self,
                            param0: *mut u32,
                            param1: *mut windows_core::BOOL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetBackground)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetBackgroundDepth<P0>(
                            &self,
                            param0: P0,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetBackgroundDepth)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetBackgroundDepth(
                            &self,
                            param0: *mut Option<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                            param1: *mut windows_core::BOOL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetBackgroundDepth)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Clear(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            param2: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Clear)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                    param2,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn AddLight<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DLight>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).AddLight)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn DeleteLight<P0>(&self, param0: P0) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DLight>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).DeleteLight)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn NextLight<P0>(
                            &self,
                            param0: P0,
                            param1: *mut Option<IDirect3DLight>,
                            param2: u32,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<IDirect3DLight>,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).NextLight)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                    core::mem::transmute(param1),
                                    param2,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DViewport_Vtbl {
                        pub base__: windows_core::IUnknown_Vtbl,
                        pub Initialize: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT,
                        )
                            -> windows_core::HRESULT,
                        pub SetViewport: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT,
                        )
                            -> windows_core::HRESULT,
                        pub TransformVertices: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            *mut windows::Win32::Graphics::Direct3D9::D3DTRANSFORMDATA,
                            u32,
                            *mut u32,
                        )
                            -> windows_core::HRESULT,
                        pub LightElements: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            *mut windows::Win32::Graphics::Direct3D9::D3DLIGHTDATA,
                        )
                            -> windows_core::HRESULT,
                        pub SetBackground: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub GetBackground: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut u32,
                            *mut windows_core::BOOL,
                        )
                            -> windows_core::HRESULT,
                        pub SetBackgroundDepth: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetBackgroundDepth: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut windows_core::BOOL,
                        )
                            -> windows_core::HRESULT,
                        pub Clear: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            u32,
                        )
                            -> windows_core::HRESULT,
                        pub AddLight: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub DeleteLight: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub NextLight: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            u32,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DViewport_Impl: windows_core::IUnknownImpl {
                        fn Initialize(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3D>,
                        ) -> windows_core::Result<()>;
                        fn GetViewport(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT,
                        ) -> windows_core::Result<()>;
                        fn SetViewport(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT,
                        ) -> windows_core::Result<()>;
                        fn TransformVertices(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DTRANSFORMDATA,
                            param2: u32,
                            param3: *mut u32,
                        ) -> windows_core::Result<()>;
                        fn LightElements(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHTDATA,
                        ) -> windows_core::Result<()>;
                        fn SetBackground(&self, param0: u32) -> windows_core::Result<()>;
                        fn GetBackground(
                            &self,
                            param0: *mut u32,
                            param1: *mut windows_core::BOOL,
                        ) -> windows_core::Result<()>;
                        fn SetBackgroundDepth(
                            &self,
                            param0: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                        ) -> windows_core::Result<()>;
                        fn GetBackgroundDepth(
                            &self,
                            param0: windows_core::OutRef<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface,
                            >,
                            param1: *mut windows_core::BOOL,
                        ) -> windows_core::Result<()>;
                        fn Clear(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                        fn AddLight(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DLight>,
                        ) -> windows_core::Result<()>;
                        fn DeleteLight(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DLight>,
                        ) -> windows_core::Result<()>;
                        fn NextLight(
                            &self,
                            param0: windows_core::Ref<'_, IDirect3DLight>,
                            param1: windows_core::OutRef<'_, IDirect3DLight>,
                            param2: u32,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DViewport_Vtbl {
                        pub const fn new<Identity: IDirect3DViewport_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn Initialize<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::Initialize(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetViewport<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::GetViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetViewport<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::SetViewport(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn TransformVertices<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DTRANSFORMDATA,
                                param2: u32,
                                param3: *mut u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::TransformVertices(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn LightElements<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DLIGHTDATA,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::LightElements(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetBackground<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::SetBackground(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetBackground<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut u32,
                                param1: *mut windows_core::BOOL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::GetBackground(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetBackgroundDepth<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::SetBackgroundDepth(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetBackgroundDepth<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut windows_core::BOOL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::GetBackgroundDepth(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Clear<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::Clear(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn AddLight<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::AddLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn DeleteLight<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::DeleteLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn NextLight<
                                Identity: IDirect3DViewport_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                                param1: *mut *mut core::ffi::c_void,
                                param2: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport_Impl::NextLight(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: windows_core::IUnknown_Vtbl::new::<Identity, OFFSET>(),
                                Initialize: Initialize::<Identity, OFFSET>,
                                GetViewport: GetViewport::<Identity, OFFSET>,
                                SetViewport: SetViewport::<Identity, OFFSET>,
                                TransformVertices: TransformVertices::<Identity, OFFSET>,
                                LightElements: LightElements::<Identity, OFFSET>,
                                SetBackground: SetBackground::<Identity, OFFSET>,
                                GetBackground: GetBackground::<Identity, OFFSET>,
                                SetBackgroundDepth: SetBackgroundDepth::<Identity, OFFSET>,
                                GetBackgroundDepth: GetBackgroundDepth::<Identity, OFFSET>,
                                Clear: Clear::<Identity, OFFSET>,
                                AddLight: AddLight::<Identity, OFFSET>,
                                DeleteLight: DeleteLight::<Identity, OFFSET>,
                                NextLight: NextLight::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DViewport as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DViewport {}
                    windows_core::imp::define_interface!(
                        IDirect3DViewport2,
                        IDirect3DViewport2_Vtbl,
                        0x93281500_8cf8_11d0_89ab_00a0c9054129
                    );
                    impl core::ops::Deref for IDirect3DViewport2 {
                        type Target = IDirect3DViewport;
                        fn deref(&self) -> &Self::Target {
                            unsafe { core::mem::transmute(self) }
                        }
                    }
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DViewport2,
                        windows_core::IUnknown,
                        IDirect3DViewport
                    );
                    impl IDirect3DViewport2 {
                        pub unsafe fn GetViewport2(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT2,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetViewport2)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn SetViewport2(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT2,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetViewport2)(
                                    windows_core::Interface::as_raw(self),
                                    param0 as _,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DViewport2_Vtbl {
                        pub base__: IDirect3DViewport_Vtbl,
                        pub GetViewport2: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT2,
                        )
                            -> windows_core::HRESULT,
                        pub SetViewport2: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT2,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DViewport2_Impl: IDirect3DViewport_Impl {
                        fn GetViewport2(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT2,
                        ) -> windows_core::Result<()>;
                        fn SetViewport2(
                            &self,
                            param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT2,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DViewport2_Vtbl {
                        pub const fn new<Identity: IDirect3DViewport2_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn GetViewport2<
                                Identity: IDirect3DViewport2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT2,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport2_Impl::GetViewport2(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn SetViewport2<
                                Identity: IDirect3DViewport2_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut windows::Win32::Graphics::Direct3D9::D3DVIEWPORT2,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport2_Impl::SetViewport2(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: IDirect3DViewport_Vtbl::new::<Identity, OFFSET>(),
                                GetViewport2: GetViewport2::<Identity, OFFSET>,
                                SetViewport2: SetViewport2::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DViewport2 as windows_core::Interface>::IID
                                || iid == &<IDirect3DViewport as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DViewport2 {}
                    windows_core::imp::define_interface!(
                        IDirect3DViewport3,
                        IDirect3DViewport3_Vtbl,
                        0xb0ab3b61_33d7_11d1_a981_00c04fd7b174
                    );
                    impl core::ops::Deref for IDirect3DViewport3 {
                        type Target = IDirect3DViewport2;
                        fn deref(&self) -> &Self::Target {
                            unsafe { core::mem::transmute(self) }
                        }
                    }
                    windows_core::imp::interface_hierarchy!(
                        IDirect3DViewport3,
                        windows_core::IUnknown,
                        IDirect3DViewport,
                        IDirect3DViewport2
                    );
                    impl IDirect3DViewport3 {
                        pub unsafe fn SetBackgroundDepth2<P0>(
                            &self,
                            param0: P0,
                        ) -> windows_core::Result<()>
                        where
                            P0: windows_core::Param<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                            >,
                        {
                            unsafe {
                                (windows_core::Interface::vtable(self).SetBackgroundDepth2)(
                                    windows_core::Interface::as_raw(self),
                                    param0.param().abi(),
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn GetBackgroundDepth2(
                            &self,
                            param0: *mut Option<
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                            >,
                            param1: *mut windows_core::BOOL,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).GetBackgroundDepth2)(
                                    windows_core::Interface::as_raw(self),
                                    core::mem::transmute(param0),
                                    param1 as _,
                                )
                                .ok()
                            }
                        }
                        pub unsafe fn Clear2(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            param2: u32,
                            param3: u32,
                            param4: f32,
                            param5: u32,
                        ) -> windows_core::Result<()> {
                            unsafe {
                                (windows_core::Interface::vtable(self).Clear2)(
                                    windows_core::Interface::as_raw(self),
                                    param0,
                                    param1 as _,
                                    param2,
                                    param3,
                                    param4,
                                    param5,
                                )
                                .ok()
                            }
                        }
                    }
                    #[repr(C)]
                    #[doc(hidden)]
                    pub struct IDirect3DViewport3_Vtbl {
                        pub base__: IDirect3DViewport2_Vtbl,
                        pub SetBackgroundDepth2: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut core::ffi::c_void,
                        )
                            -> windows_core::HRESULT,
                        pub GetBackgroundDepth2: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            *mut *mut core::ffi::c_void,
                            *mut windows_core::BOOL,
                        )
                            -> windows_core::HRESULT,
                        pub Clear2: unsafe extern "system" fn(
                            *mut core::ffi::c_void,
                            u32,
                            *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            u32,
                            u32,
                            f32,
                            u32,
                        )
                            -> windows_core::HRESULT,
                    }
                    pub trait IDirect3DViewport3_Impl: IDirect3DViewport2_Impl {
                        fn SetBackgroundDepth2(
                            &self,
                            param0: windows_core::Ref<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                            >,
                        ) -> windows_core::Result<()>;
                        fn GetBackgroundDepth2(
                            &self,
                            param0: windows_core::OutRef<
                                '_,
                                windows::Win32::Graphics::DirectDraw::IDirectDrawSurface4,
                            >,
                            param1: *mut windows_core::BOOL,
                        ) -> windows_core::Result<()>;
                        fn Clear2(
                            &self,
                            param0: u32,
                            param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                            param2: u32,
                            param3: u32,
                            param4: f32,
                            param5: u32,
                        ) -> windows_core::Result<()>;
                    }
                    impl IDirect3DViewport3_Vtbl {
                        pub const fn new<Identity: IDirect3DViewport3_Impl, const OFFSET: isize>(
                        ) -> Self {
                            unsafe extern "system" fn SetBackgroundDepth2<
                                Identity: IDirect3DViewport3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut core::ffi::c_void,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport3_Impl::SetBackgroundDepth2(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn GetBackgroundDepth2<
                                Identity: IDirect3DViewport3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: *mut *mut core::ffi::c_void,
                                param1: *mut windows_core::BOOL,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport3_Impl::GetBackgroundDepth2(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                    )
                                    .into()
                                }
                            }
                            unsafe extern "system" fn Clear2<
                                Identity: IDirect3DViewport3_Impl,
                                const OFFSET: isize,
                            >(
                                this: *mut core::ffi::c_void,
                                param0: u32,
                                param1: *mut windows::Win32::Graphics::Direct3D9::D3DRECT,
                                param2: u32,
                                param3: u32,
                                param4: f32,
                                param5: u32,
                            ) -> windows_core::HRESULT {
                                unsafe {
                                    let this: &Identity = &*((this as *const *const ())
                                        .offset(OFFSET)
                                        as *const Identity);
                                    IDirect3DViewport3_Impl::Clear2(
                                        this,
                                        core::mem::transmute_copy(&param0),
                                        core::mem::transmute_copy(&param1),
                                        core::mem::transmute_copy(&param2),
                                        core::mem::transmute_copy(&param3),
                                        core::mem::transmute_copy(&param4),
                                        core::mem::transmute_copy(&param5),
                                    )
                                    .into()
                                }
                            }
                            Self {
                                base__: IDirect3DViewport2_Vtbl::new::<Identity, OFFSET>(),
                                SetBackgroundDepth2: SetBackgroundDepth2::<Identity, OFFSET>,
                                GetBackgroundDepth2: GetBackgroundDepth2::<Identity, OFFSET>,
                                Clear2: Clear2::<Identity, OFFSET>,
                            }
                        }
                        pub fn matches(iid: &windows_core::GUID) -> bool {
                            iid == &<IDirect3DViewport3 as windows_core::Interface>::IID
                                || iid == &<IDirect3DViewport as windows_core::Interface>::IID
                                || iid == &<IDirect3DViewport2 as windows_core::Interface>::IID
                        }
                    }
                    impl windows_core::RuntimeName for IDirect3DViewport3 {}
                }
            }
        }
    }
}
